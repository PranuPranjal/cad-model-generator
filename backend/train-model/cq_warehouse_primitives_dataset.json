[
    {"prompt": "Create a Box with length 100.0, width 50.0, and height 30.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(100.0, 50.0, 30.0)"},
    {"prompt": "Generate a Cylinder with radius 20.0 and height 60.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(60.0, 20.0)"},
    {"prompt": "I need a Sphere with radius 15.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(15.0)"},
    {"prompt": "Can you make a Cone with base radius 25.0, top radius 5.0, and height 40.0?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(40.0, 25.0, 5.0)"},
    {"prompt": "Design a Torus with major radius 30.0 and minor radius 10.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(30.0, 10.0)"},
    {"prompt": "Create a Wedge with base width 50.0, height 20.0, and depth 30.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(50.0, 20.0, 30.0)"},
    {"prompt": "Generate a Prism with a hexagonal base of side 10.0 and height 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 10.0).extrude(50.0)"},
    {"prompt": "I want a Pyramid with square base side 40.0 and height 35.0.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").rect(40.0, 40.0)\ntop = cq.Workplane(\"XY\").point().translate((0, 0, 35.0))\nresult = bottom.loft(top)"},
    {"prompt": "Design a Helix with pitch 5.0, radius 8.0, and height 100.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").helix(pitch=5.0, height=100.0, radius=8.0)"},
    {"prompt": "Create a Spline curve with control points [(0,0), (10,20), (20,10), (30,30)].", "completion": "import cadquery as cq\npoints = [(0,0), (10,20), (20,10), (30,30)]\nresult = cq.Workplane(\"XY\").spline(points)"},
    {"prompt": "Generate a regular Pentagon with side length 15.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 15.0)"},
    {"prompt": "I need an I-beam profile with web height 100.0, flange width 50.0, and thickness 5.0.", "completion": "import cadquery as cq\nflange = cq.Workplane(\"XY\").rect(50.0, 5.0).extrude(5.0)\nweb = cq.Workplane(\"XY\").rect(5.0, 50.0).extrude(100.0)\nbottom_flange = flange\ntop_flange = flange.translate((0, 0, 95.0))\nresult = web.union(bottom_flange).union(top_flange)"},
    {"prompt": "Design a Pan Head Screw with M6 thread, length 20.0.", "completion": "import cadquery as cq\nhead = cq.Workplane(\"XY\").cylinder(3.0, 5.0)\nshank = cq.Workplane(\"XY\").cylinder(20.0, 3.0).translate((0, 0, 3.0))\nresult = head.union(shank)"},
    {"prompt": "Create a Hex Bolt with M8 thread, length 30.0.", "completion": "import cadquery as cq\nhead = cq.Workplane(\"XY\").hexagon(8.0).extrude(5.0)\nshank = cq.Workplane(\"XY\").cylinder(30.0, 4.0).translate((0, 0, 5.0))\nresult = head.union(shank)"},
    {"prompt": "Generate a Hex Nut for M10 thread.", "completion": "import cadquery as cq\nnut = cq.Workplane(\"XY\").hexagon(17.0).extrude(8.0)\nhole = cq.Workplane(\"XY\").cylinder(8.0, 5.0)\nresult = nut.cut(hole)"},
    {"prompt": "I want a Flat Washer with inner diameter 8.0 and outer diameter 16.0, thickness 2.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(8.0).circle(16.0).extrude(2.0)"},
    {"prompt": "Design a Pop Rivet with diameter 4.0 and length 10.0.", "completion": "import cadquery as cq\nshank = cq.Workplane(\"XY\").cylinder(10.0, 2.0)\nhead = cq.Workplane(\"XY\").cone(5.0, 4.0, 0.0).translate((0, 0, 5.0))\nresult = shank.union(head)"},
    {"prompt": "Create a Dowel Pin with diameter 6.0 and length 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(20.0, 3.0)"},
    {"prompt": "Generate a Spur Gear with 20 teeth, module 1.0, width 10.0.", "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.0, teeth_number=20, width=10.0)"},
    {"prompt": "I need a Ball Bearing with inner diameter 10.0, outer diameter 30.0, width 9.0.", "completion": "import cadquery as cq\ninner = cq.Workplane(\"XY\").cylinder(9.0, 5.0)\nouter = cq.Workplane(\"XY\").cylinder(9.0, 15.0)\nresult = outer.cut(inner)"},
    {"prompt": "Design a Solid Shaft with diameter 20.0 and length 100.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(100.0, 10.0)"},
    {"prompt": "Create a Rigid Coupling with bore diameter 12.0 and length 40.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(40.0, 20.0).cut(cq.Workplane(\"XY\").cylinder(40.0, 6.0))"},
    {"prompt": "Generate a V-Belt Pulley with diameter 50.0, width 25.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(25.0).extrude(25.0)"},
    {"prompt": "I want a Linear Extrude of a rectangle 40x20 along 50.0 height.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(40.0, 20.0).extrude(50.0)"},
    {"prompt": "Design a Fillet of radius 5.0 on a box 50x30x20.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(50.0, 30.0, 20.0)\nresult = box.edges().fillet(5.0)"},
    {"prompt": "Create a Chamfer of 3.0 on edges of a cylinder radius 10.0 height 40.0.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(40.0, 10.0)\nresult = cyl.edges().chamfer(3.0)"},
    {"prompt": "Generate a Through Hole of diameter 8.0 in a plate 100x100x5.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").rect(100.0, 100.0).extrude(5.0)\nresult = plate.cut(cq.Workplane(\"XY\").circle(4.0).extrude(5.0))"},
    {"prompt": "I need a Circular Pattern of 6 holes diameter 5.0 around a circle radius 30.0 on a disk.", "completion": "import cadquery as cq\ndisk = cq.Workplane(\"XY\").circle(40.0).extrude(10.0)\nhole_wp = cq.Workplane(\"XY\").circle(2.5)\nresult = disk.cut(hole_wp.circlePattern(6, 30.0, 0, 360).extrude(10.0))"},
    {"prompt": "Design a Mirror of a bracket across YZ plane.", "completion": "import cadquery as cq\nbracket = cq.Workplane(\"XY\").box(20.0, 10.0, 30.0)\nresult = bracket.mirror(\"YZ\")"},
    {"prompt": "Create a Shell of thickness 2.0 on a box 60x40x30.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(60.0, 40.0, 30.0)\nresult = box.faces(\">Z\").shell(-2.0)"},
    {"prompt": "Generate a Loft between two circles: bottom radius 10.0, top radius 20.0, height 50.0.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").circle(10.0)\ntop = cq.Workplane(\"XY\").circle(20.0).translate((0,0,50.0))\nresult = bottom.loft(top)"},
    {"prompt": "I want a Sweep of a profile along a helix path pitch 10.0, radius 15.0, height 100.0.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").rect(2.0, 5.0)\npath = cq.Workplane(\"XY\").helix(pitch=10.0, height=100.0, radius=15.0)\nresult = profile.sweep(path.wires().val(), isFrenet=True)"},
    {"prompt": "Design a Union of two cylinders intersecting.", "completion": "import cadquery as cq\ncyl1 = cq.Workplane(\"XY\").cylinder(50.0, 10.0)\ncyl2 = cq.Workplane(\"XZ\").cylinder(50.0, 10.0)\nresult = cyl1.union(cyl2)"},
    {"prompt": "Create a Compression Spring with diameter 20.0, wire diameter 2.0, coils 10.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").helix(pitch=5.0, height=50.0, radius=10.0, angle=360*10)\nprofile = cq.Workplane(\"YZ\").circle(1.0)\nresult = profile.sweep(path.wires().val(), isFrenet=True)"},
    {"prompt": "Generate an Elbow Fitting with diameter 25.0, angle 90 degrees.", "completion": "import cadquery as cq\ncyl1 = cq.Workplane(\"XY\").cylinder(25.0, 12.5).translate((-12.5, 0, 0))\ncyl2 = cq.Workplane(\"XY\").cylinder(25.0, 12.5).rotate((0,0,0), (0,0,1), 90).translate((0, -12.5, 0))\nresult = cyl1.union(cyl2)"},
    {"prompt": "I need a Ball Valve body with diameter 40.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").sphere(20.0)"},
    {"prompt": "Design a Weld Neck Flange with diameter 100.0, thickness 15.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(50.0).extrude(15.0)"},
    {"prompt": "Create an L-Bracket with legs 50.0x20.0x5.0.", "completion": "import cadquery as cq\nleg1 = cq.Workplane(\"XY\").box(50.0, 20.0, 5.0)\nleg2 = cq.Workplane(\"XY\").box(20.0, 50.0, 5.0).translate((0, 30.0, 0))\nresult = leg1.union(leg2)"},
    {"prompt": "Generate a Project Box 80x60x30.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(80.0, 60.0, 30.0)"},
    {"prompt": "I want a Control Knob with diameter 25.0, height 15.0.", "completion": "import cadquery as cq\nknob = cq.Workplane(\"XY\").cylinder(15.0, 12.5)\nhole = cq.Workplane(\"XY\").circle(2.5).extrude(15.0)\nresult = knob.cut(hole)"},
    {"prompt": "Design an O-Ring with inner diameter 20.0, cross-section 3.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(10.0).circle(11.5).extrude(3.0)"},
    {"prompt": "Create a Wood Screw with diameter 4.0 and length 25.0.", "completion": "import cadquery as cq\nshank = cq.Workplane(\"XY\").cylinder(25.0, 2.0)\nhead = cq.Workplane(\"XY\").cone(5.0, 4.0, 0.0).translate((0, 0, 20.0))\nresult = shank.union(head)"},
    {"prompt": "Generate a Carriage Bolt with M12 thread, length 50.0.", "completion": "import cadquery as cq\nhead = cq.Workplane(\"XY\").rect(24.0, 12.0).extrude(8.0)\nshank = cq.Workplane(\"XY\").cylinder(50.0, 6.0).translate((0, 0, 8.0))\nresult = head.union(shank)"},
    {"prompt": "I need a Nyloc Nut for M6 thread.", "completion": "import cadquery as cq\nnut = cq.Workplane(\"XY\").hexagon(10.0).extrude(5.0)\nhole = cq.Workplane(\"XY\").cylinder(5.0, 3.0)\nresult = nut.cut(hole)"},
    {"prompt": "Design a Spring Washer with outer diameter 20.0, inner diameter 10.0, thickness 2.0.", "completion": "import cadquery as cq\nwasher = cq.Workplane(\"XY\").circle(5.0).circle(10.0).extrude(2.0)\nresult = washer.spring(1.0)"},
    {"prompt": "Create a Clevis Pin with diameter 8.0, length 40.0, and head diameter 12.0.", "completion": "import cadquery as cq\npin = cq.Workplane(\"XY\").cylinder(40.0, 4.0)\nhead = cq.Workplane(\"XY\").circle(6.0).extrude(5.0)\nresult = pin.union(head)"},
    {"prompt": "Generate a Cotter Pin with diameter 3.0 and length 20.0.", "completion": "import cadquery as cq\npin = cq.Workplane(\"XY\").cylinder(20.0, 1.5)\nlegs = cq.Workplane(\"XY\").rect(1.0, 10.0).extrude(3.0).translate((0, 0, 10.0))\nresult = pin.union(legs)"},
    {"prompt": "I want an External Circlip with diameter 25.0, thickness 1.5.", "completion": "import cadquery as cq\nring = cq.Workplane(\"XY\").circle(12.5).extrude(1.5)\ngap = cq.Workplane(\"XY\").sector(12.5, 5.0, 0, 30).extrude(1.5)\nresult = ring.cut(gap)"},
    {"prompt": "Design a Helical Gear with 30 teeth, module 2.0, width 15.0, helix angle 20.0.", "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=30, width=15.0, helix_angle=20.0)"},
    {"prompt": "Create a Cylindrical Roller Bearing with inner diameter 20.0, outer diameter 42.0, width 12.0.", "completion": "import cadquery as cq\ninner = cq.Workplane(\"XY\").cylinder(12.0, 10.0)\nouter = cq.Workplane(\"XY\").cylinder(12.0, 21.0)\nresult = outer.cut(inner)"},
    {"prompt": "Generate a Splined Shaft with diameter 25.0, 6 splines, length 80.0.", "completion": "import cadquery as cq\nshaft = cq.Workplane(\"XY\").cylinder(80.0, 12.5)\nspline = cq.Workplane(\"XY\").rect(5.0, 20.0).extrude(80.0).rotate((0,0,0),(0,0,1),60)\nresult = shaft.union(spline)"},
    {"prompt": "I need a Flexible Coupling with bore 15.0, length 50.0.", "completion": "import cadquery as cq\nhub = cq.Workplane(\"XY\").cylinder(50.0, 20.0).cut(cq.Workplane(\"XY\").cylinder(50.0, 7.5))\nresult = hub"},
    {"prompt": "Design a Universal Joint with diameter 30.0, length 60.0.", "completion": "import cadquery as cq\nyoke = cq.Workplane(\"XY\").box(10.0, 30.0, 60.0)\nresult = yoke"},
    {"prompt": "Create a Timing Pulley with 48 teeth, pitch 2.0, width 20.0.", "completion": "import cadquery as cq\npulley = cq.Workplane(\"XY\").circle(48.0).extrude(20.0)\nresult = pulley"},
    {"prompt": "Generate a Roller Chain Sprocket with 20 teeth, pitch 12.7.", "completion": "import cadquery as cq\nsprocket = cq.Workplane(\"XY\").circle(20.0).extrude(10.0)\nresult = sprocket"},
    {"prompt": "I want a Disc Clutch with diameter 100.0, thickness 5.0.", "completion": "import cadquery as cq\nclutch = cq.Workplane(\"XY\").circle(50.0).extrude(5.0)\nresult = clutch"},
    {"prompt": "Design a Parallel Key with width 6.0, height 6.0, length 30.0.", "completion": "import cadquery as cq\nkey = cq.Workplane(\"XY\").box(30.0, 6.0, 6.0)\nresult = key"},
    {"prompt": "Create a Revolved Cut of a profile on a cylinder diameter 40.0, height 50.0.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(50.0, 20.0)\nprofile = cq.Workplane(\"XZ\").rect(5.0, 10.0)\nresult = cyl.cut(profile.revolve(360))"},
    {"prompt": "Generate a Linear Pattern of 4 bolts spaced 20.0 apart on a plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").rect(100.0, 100.0).extrude(5.0)\nhole = cq.Workplane(\"XY\").circle(5.0).extrude(5.0)\nresult = plate.cut(hole.linearPattern((20.0,0,0), (0,0,1), 4, 20.0))"},
    {"prompt": "I need a Boolean Subtract of a hole from a block 50x30x20.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(50.0, 30.0, 20.0)\nhole = cq.Workplane(\"XY\").circle(10.0).extrude(20.0)\nresult = block.cut(hole)"},
    {"prompt": "Design a Torsion Spring with diameter 15.0, wire 1.5, coils 8.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").helix(pitch=0, height=0, radius=7.5, angle=360*8)\nprofile = cq.Workplane(\"YZ\").circle(0.75)\nresult = profile.sweep(path.wires().val(), isFrenet=True)"},
    {"prompt": "Create a Tee Fitting with diameter 20.0.", "completion": "import cadquery as cq\nmain = cq.Workplane(\"XY\").cylinder(20.0, 10.0)\nbranch = cq.Workplane(\"XZ\").cylinder(20.0, 10.0).translate((10.0, 0, 0))\nresult = main.union(branch)"},
    {"prompt": "Generate a Gate Valve body with diameter 50.0, height 100.0.", "completion": "import cadquery as cq\nbody = cq.Workplane(\"XY\").cylinder(100.0, 25.0)\nresult = body"},
    {"prompt": "I want a Blind Flange with diameter 80.0, thickness 12.0.", "completion": "import cadquery as cq\nflange = cq.Workplane(\"XY\").circle(40.0).extrude(12.0)\nresult = flange"},
    {"prompt": "Design a Motor Mount bracket 100x80x10.", "completion": "import cadquery as cq\nmount = cq.Workplane(\"XY\").box(100.0, 80.0, 10.0)\nholes = cq.Workplane(\"XY\").circle(5.0).circlePattern(4, 40.0, 0, 360).extrude(10.0)\nresult = mount.cut(holes)"},
    {"prompt": "Create a Lever Handle with length 150.0, grip diameter 20.0.", "completion": "import cadquery as cq\nlever = cq.Workplane(\"XY\").cylinder(150.0, 10.0)\ngrip = cq.Workplane(\"XY\").cylinder(20.0, 10.0).translate((0, 0, 75.0))\nresult = lever.union(grip)"},
    {"prompt": "Create a Box with dimensions 75x45x25 on the YZ plane.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").box(75.0, 45.0, 25.0)"},
    {"prompt": "Generate a Cylinder with a radius of 10 and height of 50, oriented along the X-axis.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").cylinder(50.0, 10.0)"},
    {"prompt": "I need a Sphere with a diameter of 40.", "completion": "import cadquery as cq\nresult = cq.Sphere(20.0)"},
    {"prompt": "Make a Cone with a height of 50, a base radius of 20, and a top radius of 0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(50.0, 20.0, 0.0)"},
    {"prompt": "Design a Torus with a main radius of 50 and a tube radius of 15.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(50.0, 15.0)"},
    {"prompt": "Create a Wedge with length 60, height 40, and width 25.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(60.0, 40.0, 25.0)"},
    {"prompt": "Generate an octagonal prism, with each side of the octagon being 15.0, and a height of 70.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 15.0).extrude(70.0)"},
    {"prompt": "I want a triangular Pyramid with base side 30.0 and height 40.0.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").polygon(3, 30.0)\ntop = cq.Workplane(\"XY\").point().translate((0, 0, 40.0))\nresult = bottom.loft(top)"},
    {"prompt": "Design a Helix with a pitch of 10.0, a height of 80.0, and a radius of 12.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").helix(pitch=10.0, height=80.0, radius=12.0)"},
    {"prompt": "Create a smooth curve (spline) through points (0,0,0), (5,10,0), (15,5,0), and (20,15,0).", "completion": "import cadquery as cq\npoints = [(0,0,0), (5,10,0), (15,5,0), (20,15,0)]\nresult = cq.Workplane(\"XY\").spline(points)"},
    {"prompt": "Generate a regular Triangle with a side length of 25.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 25.0)"},
    {"prompt": "I need a hollow circular tube with an outer diameter of 50.0, an inner diameter of 40.0, and a length of 100.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(25.0).circle(20.0).extrude(100.0)"},
    {"prompt": "Design a Socket Head Cap Screw with M5 thread and 25.0 length.", "completion": "import cadquery as cq\nhead = cq.Workplane(\"XY\").cylinder(4.5, 8.5)\nshank = cq.Workplane(\"XY\").cylinder(25.0, 2.5).translate((0,0,-25.0))\nsocket = cq.Workplane(\"XY\").hexagon(4.0).extrude(-3.0).translate((0,0,4.5))\nresult = head.union(shank).cut(socket)"},
    {"prompt": "Create a Set Screw, M4 thread, 10.0 long.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(10.0, 2.0)"},
    {"prompt": "Generate a Wing Nut for an M8 thread.", "completion": "import cadquery as cq\nbody = cq.Workplane(\"XY\").cylinder(10.0, 7.0)\nwing1 = cq.Workplane(\"XZ\").box(25.0, 10.0, 4.0).translate((12.5, 0, 5.0))\nwing2 = wing1.mirror(\"YZ\")\nhole = cq.Workplane(\"XY\").cylinder(10.0, 4.0)\nresult = body.union(wing1).union(wing2).cut(hole)"},
    {"prompt": "I want a Split Lock Washer for an M10 bolt (10.5 ID, 18.0 OD, 2.2 thickness).", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(9.0).circle(5.25).extrude(2.2)"},
    {"prompt": "Design a Phillips head wood screw, 3.5mm diameter, 30mm length.", "completion": "import cadquery as cq\nshank = cq.Workplane(\"XY\").cylinder(30.0, 1.75)\nhead = cq.Workplane(\"XY\").cone(6.0, 3.5, 0.0).translate((0, 0, 27.0))\ncross1 = cq.Workplane(\"XY\").box(7.0, 1.0, 2.0).translate((0,0,31))\ncross2 = cq.Workplane(\"XY\").box(1.0, 7.0, 2.0).translate((0,0,31))\nresult = shank.union(head).cut(cross1).cut(cross2)"},
    {"prompt": "Create a hollow rectangular tube, 50x30 outer, 2.0 wall thickness, 100 long.", "completion": "import cadquery as cq\nouter = cq.Workplane(\"XY\").box(50.0, 30.0, 100.0)\ninner = cq.Workplane(\"XY\").box(46.0, 26.0, 100.0)\nresult = outer.cut(inner)"},
    {"prompt": "Generate a Bevel Gear with 25 teeth and module 1.5.", "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.5, teeth_number=25, width=12.0)"},
    {"prompt": "I need a Thrust Bearing with 15mm ID, 35mm OD, and 11mm width.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(17.5).circle(7.5).extrude(11.0)"},
    {"prompt": "Design a C-Channel beam, 100mm height, 50mm width, 5mm thickness, 200mm long.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").hLine(50).vLine(100).hLine(-45).vLine(-90).hLine(45).vLine(-10).close().extrude(200.0)"},
    {"prompt": "Create an Angle Iron (L-profile) with 40x40 legs, 4mm thick and 150mm long.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").hLine(40).vLine(4).hLine(-36).vLine(36).hLine(-4).vLine(-40).close().extrude(150.0)"},
    {"prompt": "Generate a rectangular pattern of 3x4 holes, each 5mm in diameter, spaced 15mm apart on a 100x80x10 plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100.0, 80.0, 10.0)\nholes = plate.faces(\">Z\").workplane().rect(60, 45).vertices().circle(2.5).extrude(-10)\nresult = plate.cut(holes)"},
    {"prompt": "I want to loft a shape from a square (30x30) to a circle (radius 20) over a height of 50.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").rect(30.0, 30.0)\ntop = cq.Workplane(\"XY\").circle(20.0).translate((0, 0, 50.0))\nresult = bottom.loft(top)"},
    {"prompt": "Design a sweep of a triangular profile (side 5) along a circular path (radius 30).", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").circle(30.0)\nprofile = cq.Workplane(\"XZ\").polygon(3, 5.0)\nresult = profile.sweep(path)"},
    {"prompt": "Create a solid by revolving a half-circle profile around the Z-axis.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").moveTo(10,0).radiusArc((0,20), -10).close()\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Generate the extruded text 'CAD' with a height of 10 and font size 20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").text(\"CAD\", 20, 10)"},
    {"prompt": "I need to cut the text 'V1.0' into a 50x50x5 plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(50.0, 50.0, 5.0)\ntext = cq.Workplane(\"XY\").text(\"V1.0\", 10, -5).translate((-15,0,2.5))\nresult = plate.cut(text)"},
    {"prompt": "Design a simple coffee mug with an outer diameter of 80, height of 90, and a 5mm wall thickness.", "completion": "import cadquery as cq\nouter_cyl = cq.Workplane(\"XY\").cylinder(90.0, 40.0)\ninner_cyl = cq.Workplane(\"XY\").cylinder(85.0, 35.0).translate((0,0,5))\npath = cq.Workplane(\"XZ\").moveTo(35, 70).spline([(55, 60), (60, 40), (45, 20), (35, 15)])\nhandle_profile = cq.Workplane(\"XY\").circle(6)\nhandle = handle_profile.sweep(path)\nresult = outer_cyl.cut(inner_cyl).union(handle)"},
    {"prompt": "Create a 2x4 Lego brick (dims in mm: 31.8x15.8x9.6).", "completion": "import cadquery as cq\nbody = cq.Workplane(\"XY\").box(31.8, 15.8, 9.6)\ntop_studs = body.faces(\">Z\").workplane().rarray(8, 8, 4, 2).circle(2.4).extrude(1.8)\nresult = body.union(top_studs)"},
    {"prompt": "Generate a computer heatsink 60x60x20 with 10 fins.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").box(60.0, 60.0, 5.0)\nfins = base.faces(\">Z\").workplane().rarray(6, 1, 9, 1).rect(2, 58).extrude(15)\nresult = base.union(fins)"},
    {"prompt": "I need a simple phone stand with a 15-degree tilt.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").box(80.0, 100.0, 5.0)\nback = cq.Workplane(\"XZ\").box(80.0, 120.0, 5.0).rotate((1,0,0), (0,0,0), -15).translate((0,-50,0))\nlip = cq.Workplane(\"XY\").box(80, 15, 5).translate((0,-42.5, 5))\nresult = base.union(back).union(lip)"},
    {"prompt": "Design a Pipe Elbow with a 45-degree bend, 20mm outer radius.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").moveTo(0,0).line(50,0).moveTo(50,0).radiusArc((50+35.35, 35.35), 50)\nresult = cq.Workplane(\"YZ\").circle(10).sweep(path)"},
    {"prompt": "Create a pipe reducer from 30mm diameter to 20mm diameter over a length of 40mm.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").circle(15.0)\ntop = cq.Workplane(\"XY\").circle(10.0).translate((0,0,40.0))\nresult = bottom.loft(top)"},
    {"prompt": "Generate a flange with an OD of 120mm, ID of 50mm, thickness of 15mm, and 6 bolt holes of 10mm diameter on a 90mm pitch circle diameter.", "completion": "import cadquery as cq\nflange = cq.Workplane(\"XY\").circle(60).circle(25).extrude(15)\nholes = flange.faces(\">Z\").workplane().center(0,0).polarArray(90, 0, 360, 6).circle(5).extrude(-15)\nresult = flange.cut(holes)"},
    {"prompt": "I want a keyway (4x4mm) cut into a 20mm diameter, 50mm long shaft.", "completion": "import cadquery as cq\nshaft = cq.Workplane(\"XY\").cylinder(50.0, 10.0)\nkeyway = cq.Workplane(\"XY\").rect(4.0, 4.0).extrude(50.0).translate((0, 8, 0))\nresult = shaft.cut(keyway)"},
    {"prompt": "Design a T-slotted channel, 40mm wide base, 20mm tall.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").hLine(40).vLine(8).hLine(-15).vLine(12).hLine(10).vLine(-12).hLine(-15).vLine(-8).close()\nresult = profile.extrude(100)"},
    {"prompt": "Create a countersunk hole (20mm dia, 90 deg) for an M10 screw in a 20mm thick plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(80, 80, 20)\nresult = plate.faces(\">Z\").workplane().center(0,0).cskHole(5, 10, 90)"},
    {"prompt": "Generate a counterbored hole (15mm dia, 8mm deep) for an M8 screw through a 25mm plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(70, 70, 25)\nresult = plate.faces(\">Z\").workplane().center(0,0).cboreHole(4, 8, 15)"},
    {"prompt": "I need to fillet only the top vertical edges of a 40x40x60 box with a radius of 5.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(40.0, 40.0, 60.0)\nresult = box.edges(\"|Z and >Z\").fillet(5.0)"},
    {"prompt": "Design a chamfer on the circular edges of a 30mm radius, 50mm high cylinder. Chamfer size is 2.0.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(50.0, 30.0)\nresult = cyl.edges(\" circumstial\").chamfer(2.0)"},
    {"prompt": "Create a draft angle of 5 degrees on the vertical faces of a 50x50x50 cube.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(50.0, 50.0, 50.0)\nresult = box.faces(\"|Z\").draft(5.0, (0,0,1))"},
    {"prompt": "Generate a cube and subtract a sphere from its center.", "completion": "import cadquery as cq\ncube = cq.Workplane(\"XY\").box(50.0, 50.0, 50.0)\nsphere = cq.Sphere(15.0)\nresult = cube.cut(sphere)"},
    {"prompt": "I need to combine two intersecting boxes into a single solid.", "completion": "import cadquery as cq\nbox1 = cq.Workplane(\"XY\").box(100, 20, 20)\nbox2 = cq.Workplane(\"XZ\").box(20, 100, 20)\nresult = box1.union(box2)"},
    {"prompt": "Create a D-shaped profile with a radius of 20 and extrude it by 30.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").hLine(40).threePointArc((-20,0), (0,-20)).close()\nresult = profile.extrude(30)"},
    {"prompt": "Design an extension spring with 15mm coil diameter, 1.5mm wire diameter, 20 coils, and loops at each end.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").helix(pitch=2.0, height=30.0, radius=7.5, angle=360*20)\nprofile = cq.Workplane(\"YZ\").circle(0.75)\nbody = profile.sweep(path, isFrenet=True)\nresult = body # Simplified, loops are complex"},
    {"prompt": "Generate a 6-sided die (dice) with side length 20, including pips.", "completion": "import cadquery as cq\ndie = cq.Workplane(\"XY\").box(20,20,20).edges().fillet(1)\npip = cq.Sphere(1.5)\npips_pos = {\n    'z': [(0,0,10)],\n    '-z': [(0,0,-10)],\n    'y': [(0,10,0)],\n    '-y': [(0,-10,0)],\n    'x': [(10,0,0)],\n    '-x': [(-10,0,0)]\n}\nresult = die # Simplified, would need to cut pips"},
    {"prompt": "I want a Geneva Drive mechanism component with 6 slots, 100mm outer diameter.", "completion": "import cadquery as cq\nwheel = cq.Workplane(\"XY\").circle(50).extrude(10)\nresult = wheel # Simplified, slots are complex"},
    {"prompt": "Create a Castle Nut for M12 thread.", "completion": "import cadquery as cq\nhex_body = cq.Workplane(\"XY\").hexagon(19.0).extrude(10.0)\nhole = cq.Workplane(\"XY\").cylinder(10.0, 6.0)\nslots = cq.Workplane(\"XY\").rarray(4,1,6,1).rect(4,12).translate((0,0,8))\nresult = hex_body.cut(hole).cut(slots)"},
    {"prompt": "Design a gear rack with module 1.0, 20 teeth, and 10mm width.", "completion": "from cq_gears import Rack\nresult = Rack(module=1.0, teeth_number=20, width=10.0)"},
    {"prompt": "Generate a Tapered Roller Bearing, ID 30, OD 62, width 17.", "completion": "import cadquery as cq\nouter = cq.Workplane(\"XY\").cone(17, 31, 28)\ninner = cq.Workplane(\"XY\").cone(17, 18, 15)\nresult = outer.cut(inner)"},
    {"prompt": "Create a Woodruff key, 4mm width, 16mm diameter.", "completion": "import cadquery as cq\nkey_profile = cq.Workplane(\"XY\").circle(8).translate((0,-4,0)).intersect(cq.Workplane(\"XY\").rect(16,8).translate((0,0,0)))\nresult = key_profile.extrude(4)"},
    {"prompt": "I need a wire EDM profile of a star shape extruded by 5mm.", "completion": "import cadquery as cq\nstar = cq.Workplane(\"XY\").polarArray(0, 0, 360, 5).circle(10).polarArray(36, 0, 360, 5).circle(5).hull()\nresult = star.extrude(5)"},
    {"prompt": "Design a threaded rod, M10, 100mm long (simplified thread).", "completion": "import cadquery as cq\nrod = cq.Workplane(\"XY\").cylinder(100, 5)\nthread_path = cq.Workplane(\"XY\").helix(pitch=1.5, height=100, radius=5)\nthread_profile = cq.Workplane(\"XZ\").polygon(3,1).translate((5,0,0))\nthread = thread_profile.sweep(thread_path)\nresult = rod.cut(thread)"},
    {"prompt": "Generate an elliptical plate, major axis 100, minor axis 60, thickness 8.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").ellipse(50, 30).extrude(8)"},
    {"prompt": "Create a sphere with a hole drilled through the center.", "completion": "import cadquery as cq\nsphere = cq.Sphere(30)\nhole = cq.Workplane(\"XY\").cylinder(60, 5)\nresult = sphere.cut(hole)"},
    {"prompt": "I want a block with rounded corners, 80x50x20, corner radius 10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(80, 50, forConstruction=True).vertices().circle(10).hull().extrude(20)"},
    {"prompt": "Design an Icosahedron (20-sided die) with a circumradius of 25.", "completion": "import cadquery as cq\nresult = cq.Solid.makeIcosahedron(25)"},
    {"prompt": "Create a dodecahedron with a circumradius of 30.", "completion": "import cadquery as cq\nresult = cq.Solid.makeDodecahedron(30)"},
    {"prompt": "Generate a chain link, 50mm long, 25mm wide, from 5mm diameter wire.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").rect(25, 15, forConstruction=True).vertices().fillet(7.5)\nprofile = cq.Workplane(\"XZ\").circle(2.5)\nresult = profile.sweep(path)"},
    {"prompt": "I need an open-ended box (a tray), 120x80x30, with 3mm wall thickness.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(120, 80, 30)\nresult = box.faces(\">Z\").shell(-3.0)"},
    {"prompt": "Design a knurled cylindrical knob, 30mm diameter, 20mm height.", "completion": "import cadquery as cq\nknob = cq.Workplane(\"XY\").cylinder(20, 15)\nresult = knob # Knurling is a complex texture"},
    {"prompt": "Create a rubber grommet, for 20mm hole, fits 10mm panel, 25mm OD.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").rect(5, 2.5).translate((10,0,0)).rect(2.5,10).translate((12.5,0,0)).union(cq.Workplane(\"XZ\").rect(5, 2.5).translate((10,0,7.5)))\nresult = profile.revolve(360)"},
    {"prompt": "Generate a bearing block (pillow block) for a 20mm shaft.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").box(100, 40, 15)\nhousing = cq.Workplane(\"XY\").cylinder(50, 25).translate((0,0,15))\nshaft_hole = cq.Workplane(\"XY\").cylinder(50, 10).translate((0,0,15))\nmount_holes = base.faces(\">Z\").workplane().rarray(80, 25, 2, 2).circle(5).extrude(-15)\nresult = base.union(housing).cut(shaft_hole).cut(mount_holes)"},
    {"prompt": "I want a perforated sheet, 200x200x2, with 10mm holes in a grid pattern with 20mm spacing.", "completion": "import cadquery as cq\nsheet = cq.Workplane(\"XY\").box(200, 200, 2)\nholes = sheet.faces(\">Z\").workplane().rarray(20, 20, 9, 9).circle(5).extrude(-2)\nresult = sheet.cut(holes)"},
    {"prompt": "Design a hemisphere with a radius of 40.", "completion": "import cadquery as cq\nresult = cq.Sphere(40).cut(cq.Workplane(\"XY\").box(80,80,40).translate((0,0,-20)))"},
    {"prompt": "Create a parabolic reflector dish, 100mm diameter, 25mm deep.", "completion": "import cadquery as cq\nparabola = cq.Workplane(\"XZ\").parametricCurve(lambda t: (t*t/10, 0, t), N=20, start=-25, stop=25)\nresult = parabola.revolve(360, (0,0,0), (1,0,0))"},
    {"prompt": "Generate a NACA 0012 airfoil profile and extrude it to create a wing section of 50mm.", "completion": "import cadquery as cq\n# NACA 0012 formula is complex, using a spline approximation\npoints = [(1,0), (0.9, 0.01), (0.7, 0.03), (0.5, 0.05), (0.3, 0.06), (0.1, 0.05), (0,0), (0.1, -0.05), (0.3, -0.06), (0.5, -0.05), (0.7, -0.03), (0.9, -0.01), (1,0)]\nprofile = cq.Workplane(\"XY\").spline(points).close()\nresult = profile.extrude(50)"},
    {"prompt": "I need a lens shape (biconvex), 50mm diameter, 10mm thick at center, radius of curvature 100mm.", "completion": "import cadquery as cq\nsphere1 = cq.Sphere(100).translate((0,0,-95))\nsphere2 = cq.Sphere(100).translate((0,0,95))\ncutter = cq.Workplane(\"XY\").cylinder(200, 25)\nresult = sphere1.intersect(sphere2).intersect(cutter)"},
    {"prompt": "Design a mounting plate 150x100x5 with four M6 clearance holes (6.5mm) at the corners, 10mm inset from each edge.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(150, 100, 5)\nhole_locs = plate.faces(\">Z\").workplane().rect(130, 80).vertices()\nholes = hole_locs.circle(3.25).extrude(-5)\nresult = plate.cut(holes)"},
    {"prompt": "Create a cone that has been truncated by a plane at a 30-degree angle.", "completion": "import cadquery as cq\ncone = cq.Workplane(\"XY\").cone(100, 50, 0)\ncutter = cq.Workplane(\"XY\").box(120,120,120).rotate((0,1,0), (0,0,0), 30).translate((0,0,50))\nresult = cone.cut(cutter)"},
    {"prompt": "Generate a spring clip from a flat sheet of metal (10x50x1 mm) bent into a U-shape.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").line(0,20).radiusArc((10,10), 10).line(0,-20).extrude(10)"},
    {"prompt": "I want to create an array of spheres in a 3x3x3 grid.", "completion": "import cadquery as cq\nsphere = cq.Sphere(5)\ngrid = cq.Workplane(\"XY\").rarray(15, 15, 3, 3).rarray(1, 15, 1, 3)\nresult = grid.eachpoint(lambda loc: sphere.val().located(loc))"},
    {"prompt": "Design a snap-fit cantilever clip, 5mm wide, 20mm long, with a 2mm hook at the end.", "completion": "import cadquery as cq\nbeam = cq.Workplane(\"XY\").box(20, 5, 2)\nhook_profile = cq.Workplane(\"YZ\").moveTo(0,0).line(2,2).line(-2,0).close().translate((10,2.5,0))\nhook = hook_profile.extrude(-5)\nresult = beam.union(hook)"},
    {"prompt": "Create a dovetail joint profile, 10mm deep, 20mm wide at base, 10mm at top.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").moveTo(-10,0).lineTo(10,0).lineTo(5,10).lineTo(-5,10).close()\nresult = profile.extrude(50)"},
    {"prompt": "Generate a worm gear with module 2.0 and 40 teeth.", "completion": "from cq_gears import WormGear\nresult = WormGear(module=2.0, teeth_number=40, width=20.0, helix_angle=15.0)"},
    {"prompt": "I need a hinge, with two knuckles on each leaf, 30mm pin diameter.", "completion": "import cadquery as cq\nleaf = cq.Workplane(\"XY\").box(50, 30, 3)\nknuckle = cq.Workplane(\"YZ\").circle(7.5).extrude(15).translate((25, 15, 0))\nresult = leaf.union(knuckle)"},
    {"prompt": "Design a impeller for a pump with 6 curved blades.", "completion": "import cadquery as cq\nhub = cq.Workplane(\"XY\").cylinder(50, 20)\nblade_path = cq.Workplane(\"XY\").moveTo(10,0).radiusArc((0,10),10)\nblade_profile = cq.Workplane(\"XZ\").rect(2, 50).translate((10,0,0))\nblade = blade_profile.sweep(blade_path)\nresult = hub.union(cq.Workplane(\"XY\").polarArray(0,0,0,6).each(lambda: blade))"},
    {"prompt": "Create a face shield visor shape, curved, 300mm wide and 200mm tall.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").rect(200, 1.5)\npath = cq.Workplane(\"XY\").radiusArc((0, -200), 200)\nresult = profile.sweep(path)"},
    {"prompt": "Generate a test tube rack for 6 tubes of 15mm diameter.", "completion": "import cadquery as cq\nrack = cq.Workplane(\"XY\").box(120, 50, 20)\nholes = rack.faces(\">Z\").workplane().rarray(25, 0, 3, 1).circle(7.5).extrude(-20)\nresult = rack.cut(holes)"},
    {"prompt": "I want a section view of a hollow pipe.", "completion": "import cadquery as cq\npipe = cq.Workplane(\"XY\").circle(20).circle(15).extrude(100)\ncutter = cq.Workplane(\"YZ\").box(100, 100, 100).translate((50,0,0))\nresult = pipe.cut(cutter)"},
    {"prompt": "Design a breadboard-style perforated plate, 80x100mm, holes with 2.54mm pitch.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100, 80, 2)\nholes = plate.faces(\">Z\").workplane().rarray(2.54, 2.54, 39, 31).circle(0.5).extrude(-2)\nresult = plate.cut(holes)"},
    {"prompt": "Create a Möbius strip with a radius of 50 and width of 10.", "completion": "import cadquery as cq\n# This is a highly complex shape requiring advanced scripting, a simplified representation:\npath = cq.Workplane(\"XY\").circle(50)\nprofile = cq.Workplane(\"XZ\").rect(10,2).val()\n# CadQuery sweep doesn't directly support the twist, so this is an approximation.\nresult = profile.sweep(path)"},
    {"prompt": "Generate a differential gear (spider gear).", "completion": "import cadquery as cq\n# Simplified bevel gear representation\nresult = cq.Workplane(\"XY\").cone(20, 25, 10)"},
    {"prompt": "I need a fan blade with an aerodynamic twist.", "completion": "import cadquery as cq\nroot = cq.Workplane(\"XY\").rect(20,5)\ntip = cq.Workplane(\"XY\").rect(15,3).rotate((0,0,1),(0,0,0),15).translate((0,0,100))\nresult = root.loft(tip)"},
    {"prompt": "Design a concrete barrier (Jersey barrier) profile and extrude it 2 meters.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").moveTo(0,0).hLine(60).vLine(10).lineTo(45,80).vLine(10).lineTo(15,90).vLine(-10).lineTo(0,0).close()\nresult = profile.extrude(2000)"},
    {"prompt": "Create a motherboard standoff, M3 thread, 6mm hex body, 10mm tall.", "completion": "import cadquery as cq\nbody = cq.Workplane(\"XY\").hexagon(3.0).extrude(10)\nhole = cq.Workplane(\"XY\").cylinder(10, 1.5)\nresult = body.cut(hole)"},
    {"prompt": "Generate a valve body for a globe valve, DN50.", "completion": "import cadquery as cq\nbody_sphere = cq.Sphere(40)\npipe1 = cq.Workplane(\"XY\").cylinder(80, 25).translate((-40,0,0))\npipe2 = cq.Workplane(\"XY\").cylinder(80, 25).translate((40,0,0))\nbonnet_flange = cq.Workplane(\"XY\").cylinder(15, 35).translate((0,0,30))\nresult = body_sphere.union(pipe1).union(pipe2).union(bonnet_flange)"},
    {"prompt": "I want to extrude a shape along a spline path.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").spline([(0,0), (10,10), (0,20), (10,30), (0,40)])\nprofile = cq.Workplane(\"XZ\").circle(3)\nresult = profile.sweep(path)"},
    {"prompt": "Design a heat sink with radial fins on a cylindrical base.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").cylinder(15, 30)\nfin_profile = cq.Workplane(\"XZ\").rect(20, 2).translate((25,0,0))\nresult = base.union(cq.Workplane(\"XY\").polarArray(0,0,0,12).each(lambda: fin_profile.revolve(360/12))) # Simplified"},
    {"prompt": "Create a handle with ergonomic finger grooves.", "completion": "import cadquery as cq\nhandle = cq.Workplane(\"XY\").box(30, 120, 20)\ngroove_cutter = cq.Workplane(\"XZ\").circle(8).translate((15,0,0))\ngrooves = cq.Workplane(\"XY\").rarray(1, 25, 1, 4).each(lambda: groove_cutter.val())\nresult = handle.cut(grooves)"},
    {"prompt": "Generate a Voronoi pattern on a 2D surface and extrude it.", "completion": "import random\nimport cadquery as cq\npoints = [(random.uniform(-50,50), random.uniform(-50,50)) for i in range(20)]\nplate = cq.Workplane(\"XY\").rect(100,100)\nv = cq.CQ(cq.Solid.makeVoronoi2d(points, plate.val().BoundingBox()).thicken(5))\nresult = v"},
    {"prompt": "I need to place a hemisphere on each face of a cube.", "completion": "import cadquery as cq\ncube = cq.Workplane(\"XY\").box(20,20,20)\nhemisphere = cq.Sphere(10).cut(cq.Workplane(\"XY\").box(20,20,10).translate((0,0,-5)))\nres = cube\nres = res.union(hemisphere.translate((0,0,10)))\nres = res.union(hemisphere.rotate((0,1,0),(0,0,0),180).translate((0,0,-10)))\nres = res.union(hemisphere.rotate((0,1,0),(0,0,0),90).translate((10,0,0)))\nres = res.union(hemisphere.rotate((0,1,0),(0,0,0),-90).translate((-10,0,0)))\nres = res.union(hemisphere.rotate((1,0,0),(0,0,0),-90).translate((0,10,0)))\nresult = res.union(hemisphere.rotate((1,0,0),(0,0,0),90).translate((0,-10,0)))"},
    {"prompt": "Design a part with internal cooling channels following a helical path.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").cylinder(100, 30)\nchannel_path = cq.Workplane(\"XY\").helix(pitch=20, height=100, radius=20)\nchannel_profile = cq.Workplane(\"XZ\").circle(4)\nchannel = channel_profile.sweep(channel_path)\nresult = block.cut(channel)"},
    {"prompt": "Create a lattice structure inside a transparent cube.", "completion": "import cadquery as cq\n# Lattice structures are typically generated with specialized algorithms.\n# This is a simplified representation using intersecting rods.\nstrut = cq.Workplane(\"XY\").cylinder(100,2)\nstruts = strut.union(strut.rotate((0,0,0),(0,1,0),90)).union(strut.rotate((0,0,0),(1,0,0),90))\nresult = struts"},
    {"prompt": "Create a perfect cube with a side length of 25.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(25.0, 25.0, 25.0)"},
    {"prompt": "Generate a tall and narrow box, 10 in length, 10 in width, and 100 in height.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(10.0, 10.0, 100.0)"},
    {"prompt": "I need a flat plate with dimensions 150x100 and a thickness of 5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(150.0, 100.0, 5.0)"},
    {"prompt": "Design a box centered at the origin with length 40, width 80, and height 20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(40.0, 80.0, 20.0)"},
    {"prompt": "Can you make a box oriented on the YZ plane with dimensions 30x40x50?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").box(30.0, 40.0, 50.0)"},
    {"prompt": "Generate a box on the XZ plane, 70 long, 20 wide, and 50 high.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").box(70.0, 20.0, 50.0)"},
    {"prompt": "Create a small cube of 5 units per side.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(5.0, 5.0, 5.0)"},
    {"prompt": "I need a large block with dimensions 500x300x100.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(500.0, 300.0, 100.0)"},
    {"prompt": "Design a box where the length is 60, width is 60, and height is 10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(60.0, 60.0, 10.0)"},
    {"prompt": "Generate a box with length 22.5, width 32.5, and height 12.5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(22.5, 32.5, 12.5)"},
    {"prompt": "Create a sphere with a radius of 25.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(25.0)"},
    {"prompt": "Generate a sphere with a diameter of 80.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(40.0)"},
    {"prompt": "I need a small sphere with a 5.0 radius.", "completion": "import cadquery as cq\nresult = cq.Sphere(5.0)"},
    {"prompt": "Design a sphere with a radius of 1.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(1.0)"},
    {"prompt": "Can you make a large sphere with a radius of 1000.0?", "completion": "import cadquery as cq\nresult = cq.Sphere(1000.0)"},
    {"prompt": "Generate a sphere with a radius of 33.3.", "completion": "import cadquery as cq\nresult = cq.Sphere(33.3)"},
    {"prompt": "Create a sphere that has a diameter of 15.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(7.5)"},
    {"prompt": "I need a sphere, make it with a radius of 55.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(55.0)"},
    {"prompt": "Design a sphere of radius 12.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(12.0)"},
    {"prompt": "Generate a sphere with a 50.0 unit diameter.", "completion": "import cadquery as cq\nresult = cq.Sphere(25.0)"},
    {"prompt": "Create a cylinder with a height of 100.0 and a radius of 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(100.0, 20.0)"},
    {"prompt": "Generate a short, wide cylinder with a height of 10.0 and radius of 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(10.0, 50.0)"},
    {"prompt": "I need a cylinder that's 200.0 high and has a diameter of 30.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(200.0, 15.0)"},
    {"prompt": "Design a cylinder lying on its side along the X-axis, with length 80.0 and radius 10.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").cylinder(80.0, 10.0)"},
    {"prompt": "Can you make a cylinder oriented along the Y-axis, 120.0 long with a radius of 25.0?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").cylinder(120.0, 25.0)"},
    {"prompt": "Generate a thin rod as a cylinder with height 300.0 and radius 2.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(300.0, 2.0)"},
    {"prompt": "Create a disk-like cylinder with a height of 5.0 and a large radius of 75.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(5.0, 75.0)"},
    {"prompt": "I need a cylinder with a height of 45.0 and a radius of 45.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(45.0, 45.0)"},
    {"prompt": "Design a cylinder that is 60.0 tall with a diameter of 60.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(60.0, 30.0)"},
    {"prompt": "Generate a cylinder with a precise height of 55.5 and radius of 12.75.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(55.5, 12.75)"},
    {"prompt": "Create a prism with a triangular base of side 20.0 and a height of 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 20.0).extrude(50.0)"},
    {"prompt": "Generate a pentagonal prism with a base side length of 15.0 and height of 80.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 15.0).extrude(80.0)"},
    {"prompt": "I need a hexagonal prism. The side of the hexagon is 10.0 and the prism's height is 100.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 10.0).extrude(100.0)"},
    {"prompt": "Design a tall octagonal prism with a base side of 5.0 and a height of 150.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 5.0).extrude(150.0)"},
    {"prompt": "Can you make a short triangular prism, with base side 40.0 and height of 10.0?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 40.0).extrude(10.0)"},
    {"prompt": "Generate a prism with a square base of 30.0x30.0 and a height of 70.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(30.0, 30.0).extrude(70.0)"},
    {"prompt": "Create a rectangular prism (a box) of size 50x30x90 using polygon and extrude.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(50.0, 30.0).extrude(90.0)"},
    {"prompt": "I need a hexagonal prism lying along the X-axis, side 25.0 and length 120.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").polygon(6, 25.0).extrude(120.0)"},
    {"prompt": "Design a pentagonal prism on the XZ plane, side 18.0 and length 60.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").polygon(5, 18.0).extrude(60.0)"},
    {"prompt": "Generate a triangular prism with base side 12.5 and height 35.5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 12.5).extrude(35.5)"},
    {"prompt": "Create a pyramid with a square base of side 50.0 and a height of 80.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(50.0, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=80.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a pyramid with a triangular base of side 30.0 and a height of 45.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 30.0)\napex = cq.Workplane(\"XY\").workplane(offset=45.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "I need a pyramid with a hexagonal base of side 25.0 and height 100.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 25.0)\napex = cq.Workplane(\"XY\").workplane(offset=100.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Design a short, wide pyramid with a square base of 100.0x100.0 and height 20.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(100.0, 100.0)\napex = cq.Workplane(\"XY\").workplane(offset=20.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Can you make a pentagonal pyramid with base side 20.0 and height 60.0?", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(5, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=60.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a pyramid with a rectangular base of 40x60 and a height of 75.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(40.0, 60.0)\napex = cq.Workplane(\"XY\").workplane(offset=75.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create an octagonal pyramid with base side 15.0 and height 90.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(8, 15.0)\napex = cq.Workplane(\"XY\").workplane(offset=90.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "I need a low-profile pyramid with a hexagonal base of side 50.0 and height 15.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=15.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Design a tall and thin pyramid with a square base of 10x10 and a height of 200.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(10.0, 10.0)\napex = cq.Workplane(\"XY\").workplane(offset=200.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a pyramid having a triangular base of side 22.0 and a height of 33.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 22.0)\napex = cq.Workplane(\"XY\").workplane(offset=33.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box with dimensions 120x80x40.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(120.0, 80.0, 40.0)"},
    {"prompt": "Generate a sphere with a 30 unit radius.", "completion": "import cadquery as cq\nresult = cq.Sphere(30.0)"},
    {"prompt": "I need a cylinder that is 150 tall and has a 25 radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(150.0, 25.0)"},
    {"prompt": "Design a hexagonal prism, 30 side length, 90 height.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 30.0).extrude(90.0)"},
    {"prompt": "Can you make a pyramid with a 60x60 square base and 100 height?", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(60.0, 60.0)\napex = cq.Workplane(\"XY\").workplane(offset=100.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box that is 15x25x5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(15.0, 25.0, 5.0)"},
    {"prompt": "Create a sphere with a diameter of 100.", "completion": "import cadquery as cq\nresult = cq.Sphere(50.0)"},
    {"prompt": "I need a cylinder along the Z-axis, height 75, radius 18.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(75.0, 18.0)"},
    {"prompt": "Design a triangular prism, base side 25, height 60.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 25.0).extrude(60.0)"},
    {"prompt": "Generate a pentagonal pyramid with 20 side length and 50 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(5, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=50.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a cube with 40mm sides.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(40.0, 40.0, 40.0)"},
    {"prompt": "Generate a small sphere with a 2.5mm radius.", "completion": "import cadquery as cq\nresult = cq.Sphere(2.5)"},
    {"prompt": "I need a cylinder with height 20 and diameter 40.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(20.0, 20.0)"},
    {"prompt": "Design a square prism (box) of 20x20x80.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(20.0, 20.0, 80.0)"},
    {"prompt": "Make a hexagonal pyramid with base side 15 and height 70.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 15.0)\napex = cq.Workplane(\"XY\").workplane(offset=70.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box lying flat, 200 long, 150 wide, 10 high.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(200.0, 150.0, 10.0)"},
    {"prompt": "Create a sphere with a radius of 18.", "completion": "import cadquery as cq\nresult = cq.Sphere(18.0)"},
    {"prompt": "I need a cylinder on the X axis, length 100, radius 20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").cylinder(100.0, 20.0)"},
    {"prompt": "Design an octagonal prism, side 12, height 50.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 12.0).extrude(50.0)"},
    {"prompt": "Generate a pyramid with a rectangular 30x50 base and 80 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(30.0, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=80.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box of 12x12x50.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(12.0, 12.0, 50.0)"},
    {"prompt": "Generate a sphere with radius 75.", "completion": "import cadquery as cq\nresult = cq.Sphere(75.0)"},
    {"prompt": "I need a cylinder, 90 high, 30 radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(90.0, 30.0)"},
    {"prompt": "Design a pentagonal prism with 22.0 side and 110.0 height.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 22.0).extrude(110.0)"},
    {"prompt": "Make a pyramid with a square 25x25 base and 40 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(25.0, 25.0)\napex = cq.Workplane(\"XY\").workplane(offset=40.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box, 28x38x18.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(28.0, 38.0, 18.0)"},
    {"prompt": "Create a sphere with a diameter of 35.", "completion": "import cadquery as cq\nresult = cq.Sphere(17.5)"},
    {"prompt": "I need a cylinder on the Y axis, 150 long, 15 radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").cylinder(150.0, 15.0)"},
    {"prompt": "Design a hexagonal prism on the YZ plane, side 10, length 50.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").polygon(6, 10.0).extrude(50.0)"},
    {"prompt": "Generate a triangular pyramid, base side 40, height 60.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 40.0)\napex = cq.Workplane(\"XY\").workplane(offset=60.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box with equal length and width of 50, and height 150.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(50.0, 50.0, 150.0)"},
    {"prompt": "Generate a sphere with radius 21.5.", "completion": "import cadquery as cq\nresult = cq.Sphere(21.5)"},
    {"prompt": "I need a cylinder with height 88 and radius 22.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(88.0, 22.0)"},
    {"prompt": "Design a rectangular prism of 100x200x50.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(100.0, 200.0, 50.0)"},
    {"prompt": "Make a pyramid with a 70x70 square base and 70 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(70.0, 70.0)\napex = cq.Workplane(\"XY\").workplane(offset=70.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box of 65x35x25.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(65.0, 35.0, 25.0)"},
    {"prompt": "Create a sphere with a 90 unit diameter.", "completion": "import cadquery as cq\nresult = cq.Sphere(45.0)"},
    {"prompt": "I need a very thin cylinder, height 250, radius 1.5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(250.0, 1.5)"},
    {"prompt": "Design a triangular prism lying on the XZ plane, side 30, length 100.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").polygon(3, 30.0).extrude(100.0)"},
    {"prompt": "Generate an octagonal pyramid with base side 20 and height 120.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(8, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=120.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a simple block, 10x20x30.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(10.0, 20.0, 30.0)"},
    {"prompt": "Generate a sphere with radius 0.5.", "completion": "import cadquery as cq\nresult = cq.Sphere(0.5)"},
    {"prompt": "I need a cylinder with equal height and radius of 40.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(40.0, 40.0)"},
    {"prompt": "Design a hexagonal prism, side 14, height 44.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 14.0).extrude(44.0)"},
    {"prompt": "Make a shallow pyramid with square base 80x80 and height 10.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(80.0, 80.0)\napex = cq.Workplane(\"XY\").workplane(offset=10.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box of 110x70x30 on the YZ plane.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").box(110.0, 70.0, 30.0)"},
    {"prompt": "Create a sphere with a diameter of 24.", "completion": "import cadquery as cq\nresult = cq.Sphere(12.0)"},
    {"prompt": "I need a cylinder, height 125, radius 35.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(125.0, 35.0)"},
    {"prompt": "Design a pentagonal prism with side 25 and height 75.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 25.0).extrude(75.0)"},
    {"prompt": "Generate a rectangular pyramid, base 20x40, height 55.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(20.0, 40.0)\napex = cq.Workplane(\"XY\").workplane(offset=55.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box of 90x90x20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(90.0, 90.0, 20.0)"},
    {"prompt": "Generate a sphere with radius 13.", "completion": "import cadquery as cq\nresult = cq.Sphere(13.0)"},
    {"prompt": "I need a cylinder on the XY plane, height 10, radius 60.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(10.0, 60.0)"},
    {"prompt": "Design a square prism, 15x15 base, 100 height.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(15.0, 15.0).extrude(100.0)"},
    {"prompt": "Make a pyramid with a pentagonal base, side 30, height 90.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(5, 30.0)\napex = cq.Workplane(\"XY\").workplane(offset=90.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box of 5x10x15.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(5.0, 10.0, 15.0)"},
    {"prompt": "Create a sphere with radius 42.", "completion": "import cadquery as cq\nresult = cq.Sphere(42.0)"},
    {"prompt": "I need a cylinder 33 high with a radius of 11.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(33.0, 11.0)"},
    {"prompt": "Design an octagonal prism, side 16, height 60.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 16.0).extrude(60.0)"},
    {"prompt": "Generate a pyramid with a hexagonal base side 35, height 110.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 35.0)\napex = cq.Workplane(\"XY\").workplane(offset=110.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a large cube, side length 250.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(250.0, 250.0, 250.0)"},
    {"prompt": "Generate a sphere with diameter 1.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(0.5)"},
    {"prompt": "I need a cylinder lying along the Z-axis, length 180, diameter 40.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(180.0, 20.0)"},
    {"prompt": "Design a triangular prism with base side 50 and height 20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 50.0).extrude(20.0)"},
    {"prompt": "Make a pyramid with a square base of 45x45 and a height of 95.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(45.0, 45.0)\napex = cq.Workplane(\"XY\").workplane(offset=95.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a flat box on the XZ plane, 100x100x2.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").box(100.0, 100.0, 2.0)"},
    {"prompt": "Create a sphere with radius 16.5.", "completion": "import cadquery as cq\nresult = cq.Sphere(16.5)"},
    {"prompt": "I need a cylinder with height 2.5 and radius 25.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(2.5, 25.0)"},
    {"prompt": "Design a hexagonal prism with side 8 and height 80.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 8.0).extrude(80.0)"},
    {"prompt": "Generate a triangular pyramid with base side 10 and height 30.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 10.0)\napex = cq.Workplane(\"XY\").workplane(offset=30.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box with dimensions 44x55x66.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(44.0, 55.0, 66.0)"},
    {"prompt": "Generate a sphere with a diameter of 6.6.", "completion": "import cadquery as cq\nresult = cq.Sphere(3.3)"},
    {"prompt": "I need a cylinder with height 130 and radius 13.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(130.0, 13.0)"},
    {"prompt": "Design a rectangular prism 70x30x20.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(70.0, 30.0).extrude(20.0)"},
    {"prompt": "Make a pyramid with a rectangular base 50x80 and height 120.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(50.0, 80.0)\napex = cq.Workplane(\"XY\").workplane(offset=120.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box where all sides are 18.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(18.0, 18.0, 18.0)"},
    {"prompt": "Create a sphere with a radius of 101.", "completion": "import cadquery as cq\nresult = cq.Sphere(101.0)"},
    {"prompt": "I need a cylinder standing up, 95 tall, 28 radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(95.0, 28.0)"},
    {"prompt": "Design a pentagonal prism with side length 9 and height 27.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 9.0).extrude(27.0)"},
    {"prompt": "Generate a pyramid with a square base of side 12 and height 12.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(12.0, 12.0)\napex = cq.Workplane(\"XY\").workplane(offset=12.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box of 82x42x22.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(82.0, 42.0, 22.0)"},
    {"prompt": "Generate a sphere with a radius of three hundred.", "completion": "import cadquery as cq\nresult = cq.Sphere(300.0)"},
    {"prompt": "I need a cylinder with a height of 220 and a diameter of 50.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(220.0, 25.0)"},
    {"prompt": "Design an octagonal prism of side 20 and height 40.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 20.0).extrude(40.0)"},
    {"prompt": "Make a pyramid with a 50x50 base and a height of 50.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(50.0, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=50.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a thin plate on the YZ plane, 80x50x3.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").box(80.0, 50.0, 3.0)"},
    {"prompt": "Create a sphere with a 4.5 unit radius.", "completion": "import cadquery as cq\nresult = cq.Sphere(4.5)"},
    {"prompt": "I need a cylinder whose height is twice its radius of 30.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(60.0, 30.0)"},
    {"prompt": "Design a triangular prism with a base side of 100 and a height of 10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 100.0).extrude(10.0)"},
    {"prompt": "Generate a pyramid with a hexagonal base (side 20) and height 85.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=85.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box of 12.5 x 25.0 x 37.5.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(12.5, 25.0, 37.5)"},
    {"prompt": "Generate a sphere with a diameter of 200.", "completion": "import cadquery as cq\nresult = cq.Sphere(100.0)"},
    {"prompt": "I need a cylinder where the radius is half the height of 120.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(120.0, 60.0)"},
    {"prompt": "Design a square prism of 40x40x40 (a cube).", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(40.0, 40.0).extrude(40.0)"},
    {"prompt": "Make a pyramid with a square 90x90 base and a height of 30.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(90.0, 90.0)\napex = cq.Workplane(\"XY\").workplane(offset=30.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a box 21x22x23.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(21.0, 22.0, 23.0)"},
    {"prompt": "Create a sphere with a radius of one.", "completion": "import cadquery as cq\nresult = cq.Sphere(1.0)"},
    {"prompt": "I need a cylinder that's 70 units tall with a 70 unit radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(70.0, 70.0)"},
    {"prompt": "Design a hexagonal prism with side 2.5 and height 10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 2.5).extrude(10.0)"},
    {"prompt": "Generate a triangular pyramid with a base side of 15 and height 25.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 15.0)\napex = cq.Workplane(\"XY\").workplane(offset=25.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a box 500 long, 20 wide, and 10 high.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(500.0, 20.0, 10.0)"},
    {"prompt": "Generate a sphere with a diameter of 55.", "completion": "import cadquery as cq\nresult = cq.Sphere(27.5)"},
    {"prompt": "I need a cylinder on the Y axis, length 200, radius 10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").cylinder(200.0, 10.0)"},
    {"prompt": "Design a pentagonal prism with side 11 and height 33.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 11.0).extrude(33.0)"},
    {"prompt": "Make a pyramid with a rectangular 60x20 base and 60 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(60.0, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=60.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a perfect cube with 15.5 side length.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(15.5, 15.5, 15.5)"},
    {"prompt": "Create a sphere with radius 8.", "completion": "import cadquery as cq\nresult = cq.Sphere(8.0)"},
    {"prompt": "I need a cylinder, height 140, radius 30.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(140.0, 30.0)"},
    {"prompt": "Design a rectangular prism of 80x10x10.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(80.0, 10.0, 10.0).extrude(10.0)"},
    {"prompt": "Generate a pyramid with a square 110x110 base and 88 height.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(110.0, 110.0)\napex = cq.Workplane(\"XY\").workplane(offset=88.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a Sphere with a radius of 18.5 units.", "completion": "import cadquery as cq\nresult = cq.Sphere(18.5)"},
    {"prompt": "I need a standard Cylinder, 70.0 units tall with a radius of 22.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(70.0, 22.0)"},
    {"prompt": "Create a Box that is 80.0 long, 60.0 wide, and 40.0 high.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(80.0, 60.0, 40.0)"},
    {"prompt": "Design a Cone with a base diameter of 60.0, a height of 90.0, and a sharp point (zero top radius).", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(90.0, 30.0, 0.0)"},
    {"prompt": "Make a Torus (donut shape) with a major radius of 50.0 and a minor radius of 15.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(50.0, 15.0)"},
    {"prompt": "I want a Wedge. Make it 70.0 long, 30.0 tall, and 40.0 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(70.0, 30.0, 40.0)"},
    {"prompt": "Generate a Prism with a 5-sided base (pentagon), where each side is 25.0, and extrude it by 80.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 25.0).extrude(80.0)"},
    {"prompt": "Construct a Pyramid on a square base of 45.0 by 45.0, with a height of 65.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(45.0, 45.0)\napex = cq.Workplane(\"XY\").workplane(offset=65.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "I need a sphere with a precise diameter of 31.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(15.5)"},
    {"prompt": "Create a cylinder lying along the y-axis, with a length of 150.0 and a radius of 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").cylinder(150.0, 20.0)"},
    {"prompt": "Generate a perfect cube with 35.0 unit sides.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(35.0, 35.0, 35.0)"},
    {"prompt": "Design a truncated cone (a frustum) 50.0 high, with a bottom radius of 40.0 and a top radius of 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(50.0, 40.0, 20.0)"},
    {"prompt": "Make a thin Torus, major radius 100.0, minor radius 5.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(100.0, 5.0)"},
    {"prompt": "I need a right-angle Wedge, 50x50 at the base and 60 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(50.0, 50.0, 60.0)"},
    {"prompt": "Generate a tall, thin hexagonal prism with a base side of 8.0 and a height of 200.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 8.0).extrude(200.0)"},
    {"prompt": "Build a Pyramid with a triangular base. Each side of the triangle should be 50.0, and the height should be 80.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=80.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Give me a sphere with a 75.0 radius.", "completion": "import cadquery as cq\nresult = cq.Sphere(75.0)"},
    {"prompt": "I want a disc, which is a short cylinder. Make it 5.0 high with a radius of 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(5.0, 50.0)"},
    {"prompt": "Create a flat rectangular block, 200.0 x 300.0, with a thickness of 10.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(200.0, 300.0, 10.0)"},
    {"prompt": "Design a Cone that is 120.0 tall and has a base radius of 30.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(120.0, 30.0, 0.0)"},
    {"prompt": "Generate a Torus with a large hole, major radius 80.0, minor radius 25.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(80.0, 25.0)"},
    {"prompt": "Create a 45-degree wedge, 40.0 high and 40.0 wide, with a depth of 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(40.0, 40.0, 50.0)"},
    {"prompt": "I need an octagonal prism. Each side of the base should be 15.0, and its height is 90.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 15.0).extrude(90.0)"},
    {"prompt": "Construct a Pyramid that has a hexagonal base of side 30.0 and a total height of 100.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(6, 30.0)\napex = cq.Workplane(\"XY\").workplane(offset=100.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Make me a sphere with a diameter of 1.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(0.5)"},
    {"prompt": "Generate a cylinder with a height of 85.0 and a diameter of 40.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(85.0, 20.0)"},
    {"prompt": "I need a box placed on the YZ workplane, with dimensions 50, 60, 70.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").box(50.0, 60.0, 70.0)"},
    {"prompt": "Design a Cone with a base radius of 25.0, top radius of 10.0, and height of 40.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(40.0, 25.0, 10.0)"},
    {"prompt": "Can you make a thick ring (Torus) with a major radius of 30.0 and a minor radius of 20.0?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(30.0, 20.0)"},
    {"prompt": "I need a small wedge, 10.0 wide, 20.0 high, 30.0 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(10.0, 20.0, 30.0)"},
    {"prompt": "Generate a triangular prism that is 100.0 long and has a base side of 35.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 35.0).extrude(100.0)"},
    {"prompt": "Create a Pyramid with a wide rectangular base of 80.0 by 40.0 and a height of 90.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(80.0, 40.0)\napex = cq.Workplane(\"XY\").workplane(offset=90.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "I require a Sphere with a radius of 62.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(62.0)"},
    {"prompt": "Please generate a Cylinder object, oriented along the X-axis, 200.0 in length and 30.0 in radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"YZ\").cylinder(200.0, 30.0)"},
    {"prompt": "Construct a Box object with length=90, width=45, height=30.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(90.0, 45.0, 30.0)"},
    {"prompt": "I need a Cone that starts with a 50.0 radius at the base and tapers to a 5.0 radius top over a height of 75.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(75.0, 50.0, 5.0)"},
    {"prompt": "Fabricate a Torus with an overall radius of 60.0 and a tube diameter of 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(60.0, 10.0)"},
    {"prompt": "Build a Wedge of 100.0 length, 25.0 height, and 50.0 depth.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(100.0, 25.0, 50.0)"},
    {"prompt": "Give me a prism built on a square base of 25x25, with a height of 120.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").rect(25.0, 25.0).extrude(120.0)"},
    {"prompt": "I want a Pyramid with a pentagonal base. Each side should be 25.0 and the pyramid's height should be 70.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(5, 25.0)\napex = cq.Workplane(\"XY\").workplane(offset=70.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "A sphere, diameter 22.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(11.0)"},
    {"prompt": "A cylinder, height 110.0, radius 11.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(110.0, 11.0)"},
    {"prompt": "A box, 14.0 x 28.0 x 56.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(14.0, 28.0, 56.0)"},
    {"prompt": "A cone, base radius 40.0, height 40.0, no top opening.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(40.0, 40.0, 0.0)"},
    {"prompt": "A torus, 45.0 major radius, 12.0 minor radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(45.0, 12.0)"},
    {"prompt": "A wedge, 60.0 wide, 20.0 high, 20.0 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(60.0, 20.0, 20.0)"},
    {"prompt": "A heptagonal (7-sided) prism, side 15.0, height 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(7, 15.0).extrude(50.0)"},
    {"prompt": "An octagonal pyramid, base side 20.0, height 80.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(8, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=80.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a Sphere model with a 120.0 unit diameter.", "completion": "import cadquery as cq\nresult = cq.Sphere(60.0)"},
    {"prompt": "Generate a Cylinder model with a height of 500.0 and a radius of 15.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(500.0, 15.0)"},
    {"prompt": "I need a Box model measuring 22.0 x 44.0 x 11.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(22.0, 44.0, 11.0)"},
    {"prompt": "Design a Cone model with a 70.0 unit height, a 35.0 unit base radius, and a 15.0 unit top radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(70.0, 35.0, 15.0)"},
    {"prompt": "Model a Torus with a primary radius of 90.0 and a secondary radius of 30.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(90.0, 30.0)"},
    {"prompt": "I want a Wedge model, 80.0 long, 20.0 high, and 35.0 in depth.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(80.0, 20.0, 35.0)"},
    {"prompt": "Generate a Prism model with a circular base (a cylinder) of radius 40.0 and height 10.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").circle(40.0).extrude(10.0)"},
    {"prompt": "Construct a Pyramid model on a square 60x60 base, reaching a height of 110.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(60.0, 60.0)\napex = cq.Workplane(\"XY\").workplane(offset=110.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Please produce a sphere of radius nine.", "completion": "import cadquery as cq\nresult = cq.Sphere(9.0)"},
    {"prompt": "Produce a cylinder of height one hundred and radius ten.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(100.0, 10.0)"},
    {"prompt": "Produce a box of length fifty, width twenty, and height five.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(50.0, 20.0, 5.0)"},
    {"prompt": "Produce a cone with base radius thirty and height eighty.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(80.0, 30.0, 0.0)"},
    {"prompt": "Produce a torus with major radius sixty and minor radius ten.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(60.0, 10.0)"},
    {"prompt": "Produce a wedge, 75 long, 25 high, 30 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(75.0, 25.0, 30.0)"},
    {"prompt": "Produce a pentagonal prism of side 18 and height 60.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(5, 18.0).extrude(60.0)"},
    {"prompt": "Produce a pyramid with a square base of side 20 and height 30.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(20.0, 20.0)\napex = cq.Workplane(\"XY\").workplane(offset=30.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Generate a sphere with a diameter of 3.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(1.5)"},
    {"prompt": "Create a cylinder on the XZ plane, 90.0 long with a 15.0 radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XZ\").cylinder(90.0, 15.0)"},
    {"prompt": "I need a box whose length and width are 40.0 and height is 120.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(40.0, 40.0, 120.0)"},
    {"prompt": "Design a cone that looks like a funnel, 60.0 tall, 40.0 base radius, 30.0 top radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(60.0, 40.0, 30.0)"},
    {"prompt": "Make a Torus with a 200.0 major radius and 50.0 minor radius.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(200.0, 50.0)"},
    {"prompt": "I want a wedge that is 120.0 long and forms a 30-degree angle (height approx 69.3).", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(120.0, 69.3, 50.0)"},
    {"prompt": "Generate a short, wide octagonal prism with a base side of 40.0 and a height of 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(8, 40.0).extrude(20.0)"},
    {"prompt": "Construct a low-profile Pyramid on a triangular base of side 60.0, with a height of only 15.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").polygon(3, 60.0)\napex = cq.Workplane(\"XY\").workplane(offset=15.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "A sphere, please. Radius 24.0.", "completion": "import cadquery as cq\nresult = cq.Sphere(24.0)"},
    {"prompt": "A cylinder, please. Height 25.0, radius 50.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(25.0, 50.0)"},
    {"prompt": "A box, please. 70.0 x 70.0 x 20.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(70.0, 70.0, 20.0)"},
    {"prompt": "A sharp cone, please. Base diameter 80.0, height 100.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(100.0, 40.0, 0.0)"},
    {"prompt": "A torus, please. Major radius 70.0, minor radius 22.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(70.0, 22.0)"},
    {"prompt": "A wedge, please. 30.0 wide, 60.0 high, 45.0 deep.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(30.0, 60.0, 45.0)"},
    {"prompt": "A hexagonal prism, please. Side 21.0, height 70.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(6, 21.0).extrude(70.0)"},
    {"prompt": "A square pyramid, please. Base 33.0 by 33.0, height 44.0.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(33.0, 33.0)\napex = cq.Workplane(\"XY\").workplane(offset=44.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Can you provide a sphere with a radius of 19.0?", "completion": "import cadquery as cq\nresult = cq.Sphere(19.0)"},
    {"prompt": "Provide a cylinder with a height of 160.0 and a radius of 24.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cylinder(160.0, 24.0)"},
    {"prompt": "Please provide a box with dimensions 110.0 x 88.0 x 33.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").box(110.0, 88.0, 33.0)"},
    {"prompt": "Provide a cone with a base radius of 28.0 and a height of 95.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").cone(95.0, 28.0, 0.0)"},
    {"prompt": "I'd like a Torus with a major radius of 120.0 and a minor radius of 40.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").torus(120.0, 40.0)"},
    {"prompt": "Can you make a wedge that is 48.0 wide, 24.0 high, and 40.0 deep?", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").wedge(48.0, 24.0, 40.0)"},
    {"prompt": "Provide a prism on a triangular base with sides of 28.0 and a height of 82.0.", "completion": "import cadquery as cq\nresult = cq.Workplane(\"XY\").polygon(3, 28.0).extrude(82.0)"},
    {"prompt": "I need a pyramid that stands 150.0 tall on a 100.0 by 100.0 square base.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(100.0, 100.0)\napex = cq.Workplane(\"XY\").workplane(offset=150.0).center(0,0)\nresult = base.loft(apex)"},
    {"prompt": "Create a 100x80x20 plate and round all its top edges with a 5.0 radius fillet.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100.0, 80.0, 20.0)\nresult = plate.faces(\">Z\").edges().fillet(5.0)"},
    {"prompt": "Design a cylinder with a radius of 30 and height of 80, then bevel its top and bottom circular edges with a 3.0 chamfer.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(80.0, 30.0)\nresult = cyl.edges(\"|Z\").chamfer(3.0)"},
    {"prompt": "Generate a 50x50x50 cube and hollow it out, leaving a 2.0 wall thickness.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(50.0, 50.0, 50.0)\nresult = box.faces(\">Z\").shell(-2.0)"},
    {"prompt": "I need to cut a circular pocket 5.0 deep with a 15.0 radius into the center of a 100x100x10 plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100.0, 100.0, 10.0)\npocket = cq.Workplane(\"XY\").workplane(offset=10.0).circle(15.0).extrude(-5.0)\nresult = plate.cut(pocket)"},
    {"prompt": "Create a solid by revolving a 20x40 rectangle 360 degrees around the Z-axis, placed 30 units away from it.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").rect(20.0, 40.0).translate((40,0,0))\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Design a loft from a 40x40 square at the base to a 20.0 radius circle 60.0 units high.", "completion": "import cadquery as cq\nbottom_profile = cq.Workplane(\"XY\").rect(40.0, 40.0)\ntop_profile = cq.Workplane(\"XY\").circle(20.0).translate((0,0,60.0))\nresult = bottom_profile.loft(top_profile)"},
    {"prompt": "Create a pipe shape by sweeping a circle of radius 5.0 along a 90-degree arc path with a radius of 50.0.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").moveTo(50,0).threePointArc((0,50), (-50,0))\nprofile = cq.Workplane(\"YZ\").circle(5.0)\nresult = profile.sweep(path)"},
    {"prompt": "Generate a 120x30x10 bracket, cut a 10.0 diameter hole through it, and then mirror the hole across the YZ plane.", "completion": "import cadquery as cq\nbracket = cq.Workplane(\"XY\").box(120.0, 30.0, 10.0)\nhole = cq.Workplane(\"XY\").workplane(offset=10.0).center(40,0).circle(5.0).extrude(-10.0)\nmirrored_hole = hole.mirror(\"YZ\")\nresult = bracket.cut(hole).cut(mirrored_hole)"},
    {"prompt": "I want a 100x20x20 bar with a linear pattern of 5 square holes (10x10), spaced 20.0 apart.", "completion": "import cadquery as cq\nbar = cq.Workplane(\"XY\").box(100.0, 20.0, 20.0)\nholes = cq.Workplane(\"XY\").workplane(offset=20.0).rarray(20, 1, 5, 1).rect(10.0, 10.0).extrude(-20.0)\nresult = bar.cut(holes)"},
    {"prompt": "Design a circular plate, 80.0 diameter and 10.0 thick, with a circular pattern of 6 holes (5.0 diameter) on a 60.0 pitch circle diameter.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").circle(40.0).extrude(10.0)\nholes = plate.faces(\">Z\").workplane().polarArray(30.0, 0, 360, 6).circle(2.5).extrude(-10.0)\nresult = plate.cut(holes)"},
    {"prompt": "Create a union of two perpendicular cylinders, both 100.0 long with a 20.0 radius.", "completion": "import cadquery as cq\ncyl1 = cq.Workplane(\"XY\").cylinder(100.0, 20.0)\ncyl2 = cq.Workplane(\"XZ\").cylinder(100.0, 20.0)\nresult = cyl1.union(cyl2)"},
    {"prompt": "I need the intersection volume of a 50x50x50 cube and a sphere with a 40.0 radius centered at the same origin.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(50.0, 50.0, 50.0)\nsphere = cq.Sphere(40.0)\nresult = box.intersect(sphere)"},
    {"prompt": "Take a 60.0 radius, 100.0 high cylinder and perform a revolved cut to create a groove on the outside.", "completion": "import cadquery as cq\ncylinder = cq.Workplane(\"XY\").cylinder(100.0, 60.0)\ncut_profile = cq.Workplane(\"XZ\").circle(5.0).translate((55,0,50))\nresult = cylinder.cut(cut_profile.revolve(360, (0,0,0), (0,0,1)))"},
    {"prompt": "Generate a 100x100x10 plate and add a through hole with a 15.0 diameter.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100.0, 100.0, 10.0)\nresult = plate.faces(\">Z\").workplane().hole(15.0)"},
    {"prompt": "Design a mounting block 60x40x20 with four M6 counterbored holes (6mm dia, 11mm cbore dia, 6mm cbore depth).", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(60.0, 40.0, 20.0)\nresult = block.faces(\">Z\").workplane().rect(40, 20).vertices().cboreHole(6.0, 11.0, 6.0)"},
    {"prompt": "Create a block with a 20.0 diameter countersunk hole in the center (90-degree angle).", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(80.0, 80.0, 30.0)\nresult = block.faces(\">Z\").workplane().cskHole(10.0, 20.0, 90.0)"},
    {"prompt": "Extrude a T-shape profile (50 high, 40 wide, 10 thick) by 100.0.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").rect(10,50).center(0,25).union(cq.Workplane(\"XY\").rect(40,10).center(0,5))\nresult = profile.extrude(100.0)"},
    {"prompt": "Cut a dovetail slot into a 100x100x30 block.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(100.0, 100.0, 30.0)\nprofile = cq.Workplane(\"YZ\").moveTo(-10,10).lineTo(10,10).lineTo(20,0).lineTo(-20,0).close().translate((0,0,15))\ncutter = profile.extrude(100.0)\nresult = block.cut(cutter)"},
    {"prompt": "Revolve a triangular sketch to create a cone.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").moveTo(0,0).lineTo(30,0).lineTo(0,50).close()\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Fillet only the vertical edges of a 40x30x60 box with a 4.0 radius.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(40.0, 30.0, 60.0)\nresult = box.edges(\"|Z\").fillet(4.0)"},
    {"prompt": "Chamfer all edges of a 30x30x30 cube with a 2.0 chamfer.", "completion": "import cadquery as cq\ncube = cq.Workplane(\"XY\").box(30.0, 30.0, 30.0)\nresult = cube.edges().chamfer(2.0)"},
    {"prompt": "Create a hollow cylinder (pipe) with OD 50.0, ID 40.0, and length 120.0 using a shell operation.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(120.0, 25.0)\nhollow_cyl = cyl.faces(\">Z or <Z\").shell(5.0)\nresult = hollow_cyl"},
    {"prompt": "Loft a part from a small 20x20 square, through a 40mm diameter circle at mid-height (40), to a 30x30 square at the top (80).", "completion": "import cadquery as cq\ns1 = cq.Workplane(\"XY\").rect(20,20)\ns2 = cq.Workplane(\"XY\").workplane(offset=40).circle(20)\ns3 = cq.Workplane(\"XY\").workplane(offset=80).rect(30,30)\nresult = cq.Solid.makeLoft([s1.val(), s2.val(), s3.val()])"},
    {"prompt": "Sweep a hexagonal profile (side 10) along a straight 150.0 line.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").line(0, 150)\nprofile = cq.Workplane(\"XZ\").polygon(6, 10.0)\nresult = profile.sweep(path)"},
    {"prompt": "Create a half-bracket by extruding an L-shape, then mirror it to form the full part.", "completion": "import cadquery as cq\nhalf_bracket = cq.Workplane(\"XY\").hLine(50).vLine(10).hLine(-40).vLine(40).hLine(-10).close().extrude(20)\nresult = half_bracket.union(half_bracket.mirror(\"YZ\"))"},
    {"prompt": "Create a linear pattern of 4 cylinders (bosses) on a plate. Each cylinder is 10.0 high, 8.0 radius, spaced 30.0 apart.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(150, 60, 10)\nboss = cq.Workplane(\"XY\").workplane(offset=10).cylinder(10.0, 8.0)\nresult = plate.union(cq.Workplane(\"XY\").rarray(30, 1, 4, 1).eachpoint(lambda loc: boss.val().located(loc)))"},
    {"prompt": "I need a circular pattern of 8 rectangular bosses on a disk.", "completion": "import cadquery as cq\ndisk = cq.Workplane(\"XY\").circle(50).extrude(10)\nboss = cq.Workplane(\"XY\").rect(10, 5).extrude(5).translate((30,0,10))\nresult = disk.union(cq.Workplane(\"XY\").polarArray(0, 0, 360, 8).each(lambda: boss.val()))"},
    {"prompt": "Subtract a sphere from the corner of a cube.", "completion": "import cadquery as cq\ncube = cq.Workplane(\"XY\").box(50.0, 50.0, 50.0)\ncutter = cq.Sphere(30.0).translate((25,25,25))\nresult = cube.cut(cutter)"},
    {"prompt": "Cut a groove in a shaft using a revolved rectangular profile.", "completion": "import cadquery as cq\nshaft = cq.Workplane(\"XY\").cylinder(100.0, 20.0)\ncut_profile = cq.Workplane(\"XZ\").rect(4.0, 4.0).translate((18,0,48))\nresult = shaft.cut(cut_profile.revolve(360, (0,0,0), (0,0,1)))"},
    {"prompt": "Create a handwheel by revolving a sketch with spokes.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").circle(10).translate((50,0,0)).union(cq.Workplane(\"XZ\").rect(80, 5).translate((40,0,-2.5)))\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Make a block and round two of its parallel top edges with a 10.0 fillet.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(100, 60, 30)\nresult = block.edges(\">Z and |Y\").fillet(10.0)"},
    {"prompt": "Bevel the four base edges of a pyramid with a 2.0 chamfer.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").rect(50.0, 50.0)\napex = cq.Workplane(\"XY\").workplane(offset=50.0).center(0,0)\npyramid = base.loft(apex)\nresult = pyramid.edges(\"<Z\").chamfer(2.0)"},
    {"prompt": "Design a plastic enclosure (open box) 150x100x40 with a 3mm wall thickness using shell.", "completion": "import cadquery as cq\nenclosure = cq.Workplane(\"XY\").box(150.0, 100.0, 40.0)\nresult = enclosure.faces(\">Z\").shell(-3.0)"},
    {"prompt": "Loft a shape from a hexagon (side 30) to a triangle (side 20) over a height of 50.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").polygon(6, 30.0)\ntop = cq.Workplane(\"XY\").polygon(3, 20.0).translate((0,0,50))\nresult = bottom.loft(top)"},
    {"prompt": "Sweep a square profile (10x10) along a helical path (radius 30, pitch 10, height 80).", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").helix(10.0, 80.0, 30.0)\nprofile = cq.Workplane(\"XZ\").rect(10.0, 10.0)\nresult = profile.sweep(path)"},
    {"prompt": "Extrude an I-beam profile.", "completion": "import cadquery as cq\nflange = cq.Workplane(\"XY\").rect(50, 8)\nweb = cq.Workplane(\"XY\").rect(8, 84)\nprofile = flange.union(web).union(flange.translate((0,0,92)))\nresult = profile.extrude(200)"},
    {"prompt": "Create a plate with a rectangular pocket that has filleted corners.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(120, 80, 15)\npocket = plate.faces(\">Z\").workplane().rect(80,40).extrude(-8).edges(\"|Z\").fillet(5)\nresult = plate.cut(pocket)"},
    {"prompt": "Join a sphere to a cylinder to make a pin with a ball head.", "completion": "import cadquery as cq\nshank = cq.Workplane(\"XY\").cylinder(50.0, 5.0)\nhead = cq.Sphere(10.0).translate((0,0,50))\nresult = shank.union(head)"},
    {"prompt": "Find the common volume between two offset spheres.", "completion": "import cadquery as cq\nsphere1 = cq.Sphere(30)\nsphere2 = cq.Sphere(30).translate((20,0,0))\nresult = sphere1.intersect(sphere2)"},
    {"prompt": "Cut a semi-circular groove along the edge of a block.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(100,20,20)\npath = cq.Workplane(\"XY\").line(0,100)\nprofile = cq.Workplane(\"YZ\").circle(5).translate((10,0,0))\ncutter = profile.sweep(path)\nresult = block.cut(cutter)"},
    {"prompt": "Create a block with a blind hole that is 20mm deep and 10mm in diameter.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(50,50,30)\nresult = block.faces(\">Z\").workplane().hole(10, 20)"},
    {"prompt": "I need a plate with a grid of 4x5 counterbored holes.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(150, 120, 20)\nresult = plate.faces(\">Z\").workplane().rarray(30, 25, 4, 5).cboreHole(6, 10, 5)"},
    {"prompt": "Revolve a sketch of a wine glass profile.", "completion": "import cadquery as cq\npts = [(0,0), (10,2), (15,5), (20,10), (20,40), (40,60), (38,60)]\nprofile = cq.Workplane(\"XZ\").spline(pts).close()\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Create a link component by extruding a sketch of two circles connected by lines.", "completion": "import cadquery as cq\nlink = cq.Workplane(\"XY\").circle(15).center(80,0).circle(20).hull()\nresult = link.extrude(10)"},
    {"prompt": "Chamfer the sharp edge of a cone.", "completion": "import cadquery as cq\ncone = cq.Workplane(\"XY\").cone(50, 30, 0)\nresult = cone.edges(\"<Z\").chamfer(2)"},
    {"prompt": "Create a spherical shell with an outer radius of 50 and inner radius of 45.", "completion": "import cadquery as cq\nouter = cq.Sphere(50)\ninner = cq.Sphere(45)\nresult = outer.cut(inner)"},
    {"prompt": "Loft from a circle to a point to create a cone.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").circle(30)\ntop = cq.Workplane(\"XY\").workplane(offset=60).center(0,0)\nresult = bottom.loft(top)"},
    {"prompt": "Sweep a triangular profile along a circular path to create a ring with a V-groove.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").circle(50)\nprofile = cq.Workplane(\"XZ\").polygon(3, 5).translate((50,0,0))\nresult = profile.sweep(path)"},
    {"prompt": "Create a motor mount by joining a vertical plate to a base plate.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").box(80, 60, 10)\nriser = cq.Workplane(\"XZ\").box(10, 50, 60).translate((0,-25,10))\nresult = base.union(riser)"},
    {"prompt": "Mirror a complex cut feature on a part.", "completion": "import cadquery as cq\npart = cq.Workplane(\"XY\").box(100, 100, 20)\ncutout = cq.Workplane(\"XY\").workplane(offset=20).center(25,0).rect(20,30).circle(5).extrude(-20)\nmirrored_cutout = cutout.mirror(\"YZ\")\nresult = part.cut(cutout).cut(mirrored_cutout)"},
    {"prompt": "Subtract one box from another to create a notch.", "completion": "import cadquery as cq\nmain_box = cq.Workplane(\"XY\").box(100, 50, 30)\ncutter_box = cq.Workplane(\"XY\").box(20, 20, 30).translate((40, 15, 0))\nresult = main_box.cut(cutter_box)"},
    {"prompt": "Create a wheel shape by revolving a profile.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").rect(20,40).translate((30,0,0))\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Create a 80x80 plate and fillet the four corners of the top face with a 10 radius.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(80,80,10)\nresult = plate.faces(\">Z\").vertices().fillet(10)"},
    {"prompt": "Create a shaft and cut a keyway slot using a subtraction.", "completion": "import cadquery as cq\nshaft = cq.Workplane(\"XY\").cylinder(100, 20)\nkeyway = cq.Workplane(\"XZ\").rect(8, 4).translate((18,0,0)).extrude(50)\nresult = shaft.cut(keyway)"},
    {"prompt": "Loft from a rectangle to a smaller, rotated rectangle.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").rect(60,40)\ntop = cq.Workplane(\"XY\").workplane(offset=50).rect(30,20).rotate((0,0,1),(0,0,1),45)\nresult = bottom.loft(top)"},
    {"prompt": "Sweep a profile along two connected lines (a non-planar path).", "completion": "import cadquery as cq\nwire = cq.Wire.makePolygon([(0,0,0), (50,0,0), (50,50,50)])\npath = cq.Workplane(wire)\nprofile = cq.Workplane(\"YZ\").circle(5)\nresult = profile.sweep(path)"},
    {"prompt": "Create a part with a boss, then pattern the entire part.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(40,40,5)\nboss = cq.Workplane(\"XY\").workplane(offset=5).circle(10).extrude(10)\npart = plate.union(boss)\nresult = cq.Workplane(\"XY\").rarray(50,50,3,3).eachpoint(lambda loc: part.val().located(loc))"},
    {"prompt": "I need to join 3 spheres together in a line.", "completion": "import cadquery as cq\ns1 = cq.Sphere(10)\ns2 = cq.Sphere(10).translate((20,0,0))\ns3 = cq.Sphere(10).translate((40,0,0))\nresult = s1.union(s2).union(s3)"},
    {"prompt": "Find the shape made by the intersection of a tall box and a wide box.", "completion": "import cadquery as cq\nbox1 = cq.Workplane(\"XY\").box(20, 20, 100)\nbox2 = cq.Workplane(\"XY\").box(100, 100, 20)\nresult = box1.intersect(box2)"},
    {"prompt": "Extrude a star shape to create a decorative column.", "completion": "import cadquery as cq\nstar = cq.Workplane(\"XY\").polygon(5, 20, forConstruction=True).vertices().circle(5).hull()\nresult = star.extrude(200)"},
    {"prompt": "Create a hollow cone using the shell feature.", "completion": "import cadquery as cq\ncone = cq.Workplane(\"XY\").cone(80, 40, 0)\nresult = cone.faces(\"<Z\").shell(3)"},
    {"prompt": "Add a filleted boss to the center of a plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(100,100,10)\nboss_solid = cq.Workplane(\"XY\").workplane(offset=10).circle(20).extrude(20)\nresult = plate.union(boss_solid).edges(fillet=5.0)"},
    {"prompt": "Cut a hole and then chamfer the edge of the hole.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(80,80,20)\nplate_with_hole = plate.faces(\">Z\").workplane().hole(30)\nresult = plate_with_hole.faces(\">Z\").edges(\" <Z\").chamfer(2)"},
    {"prompt": "Create a circular array of smaller cylinders around a central cylinder.", "completion": "import cadquery as cq\ncenter_post = cq.Workplane(\"XY\").cylinder(50, 10)\nsmall_post = cq.Workplane(\"XY\").cylinder(30, 5).translate((30,0,0))\nresult = center_post.union(cq.Workplane(\"XY\").polarArray(0,0,0,6).each(lambda: small_post.val()))"},
    {"prompt": "Sweep a circle along a spline to make a curved pipe.", "completion": "import cadquery as cq\npts = [(0,0,0), (50,20,0), (80,-30,0), (120,0,0)]\npath = cq.Workplane().spline(pts)\nprofile = cq.Workplane(\"YZ\").circle(8)\nresult = profile.sweep(path)"},
    {"prompt": "Make a block and cut a slot clean through it.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(80,50,30)\nslot = block.faces(\">Z\").workplane().slot2D(40,10).extrude(-30)\nresult = block.cut(slot)"},
    {"prompt": "Revolve a semi-circle to create a solid sphere.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").moveTo(0,0).radiusArc((0,40), 20).close()\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Create a loft between two offset and rotated rectangles.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").rect(50,30)\ntop = cq.Workplane(\"XY\").workplane(offset=60).center(20,20).rect(20,40).rotate((0,0,1),(0,0,1),-30)\nresult = bottom.loft(top)"},
    {"prompt": "Model a heatsink by creating one fin and using a linear pattern.", "completion": "import cadquery as cq\nbase = cq.Workplane(\"XY\").box(100, 50, 5)\nfin = cq.Workplane(\"XY\").workplane(offset=5).rect(2,50).extrude(30)\nfins = cq.Workplane(\"XY\").rarray(10,1,10,1).eachpoint(lambda loc: fin.val().located(loc))\nresult = base.union(fins)"},
    {"prompt": "I need a link arm with filleted ends, created by hulling two circles.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").circle(10).center(60,0).circle(10).hull()\nresult = profile.extrude(8)"},
    {"prompt": "Create a block and cut text into its face.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(120,50,20)\ntext_cutout = cq.Workplane(\"XY\").workplane(offset=20).text(\"CQ\", 30, -5)\nresult = block.cut(text_cutout)"},
    {"prompt": "Join a box and a cylinder, then fillet the intersecting edge.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(80,80,20)\npost = cq.Workplane(\"XY\").workplane(offset=20).cylinder(40,20)\nresult = plate.union(post).edges(fillet=4.0)"},
    {"prompt": "Create a hemisphere by intersecting a sphere with a box.", "completion": "import cadquery as cq\nsphere = cq.Sphere(50)\ncutter = cq.Workplane(\"XY\").box(100,100,50).translate((0,0,25))\nresult = sphere.intersect(cutter)"},
    {"prompt": "Design a tube with a swept square profile along a circular path.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").circle(40)\nprofile = cq.Workplane(\"XZ\").rect(8,8).translate((40,0,0))\nresult = profile.sweep(path)"},
    {"prompt": "Extrude a complex sketch made of lines and arcs to form a cam profile.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").circle(20).moveTo(0,20).lineTo(0,30).threePointArc((30,0), (0,-30)).lineTo(0,-20).close()\nresult = profile.extrude(15)"},
    {"prompt": "Create a handle by lofting between two ellipses.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").ellipse(30,15)\ntop = cq.Workplane(\"XY\").workplane(offset=100).ellipse(25,12)\nresult = bottom.loft(top)"},
    {"prompt": "Mirror a wedge to create a pyramid shape.", "completion": "import cadquery as cq\nwedge = cq.Workplane(\"XY\").wedge(50,50,50)\nresult = wedge.union(wedge.mirror(\"XZ\"))"},
    {"prompt": "Create a circular pattern of slots on a washer.", "completion": "import cadquery as cq\nwasher = cq.Workplane(\"XY\").circle(40).circle(20).extrude(5)\nslot = cq.Workplane(\"XY\").slot2D(15, 6).translate((30,0,0))\ncutouts = cq.Workplane(\"XY\").polarArray(0,0,0,4).each(lambda: slot.val()).extrude(5)\nresult = washer.cut(cutouts)"},
    {"prompt": "Fillet all edges of a cylinder.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(50,20)\nresult = cyl.edges().fillet(2)"},
    {"prompt": "Use a boolean subtract to create a spherical dimple in a block.", "completion": "import cadquery as cq\nblock = cq.Workplane(\"XY\").box(60,60,20)\ndimple_cutter = cq.Sphere(15).translate((0,0,20))\nresult = block.cut(dimple_cutter)"},
    {"prompt": "Revolve a profile to create a simple pulley wheel with a groove.", "completion": "import cadquery as cq\npts = [(10,0), (30,0), (30,30), (25,30), (20,25), (15,30), (10,30)]\nprofile = cq.Workplane(\"XZ\").polyline(pts).close()\nresult = profile.revolve(360, (0,0,0), (0,0,1))"},
    {"prompt": "Extrude a rectangle with a hole in it to create a tube with a square profile.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").rect(50,50).rect(40,40)\nresult = profile.extrude(100)"},
    {"prompt": "Chamfer the four corner vertices of a box.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(50,40,30)\nresult = box.vertices().chamfer(5)"},
    {"prompt": "Shell a cylinder from both ends to create a pipe.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(100, 25)\nresult = cyl.faces(\">Z or <Z\").shell(3.0)"},
    {"prompt": "Sweep a small circle along a line to create a wire.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").line(0,200)\nprofile = cq.Workplane(\"YZ\").circle(1.5)\nresult = profile.sweep(path)"},
    {"prompt": "Create a part from the union of a box and a half-cylinder.", "completion": "import cadquery as cq\nbox = cq.Workplane(\"XY\").box(80,50,30)\nhalf_cyl = cq.Workplane(\"YZ\").circle(25).extrude(80).translate((-40,0,0))\nresult = box.union(half_cyl)"},
    {"prompt": "Create a rib support by lofting from a line to a point.", "completion": "import cadquery as cq\n# This is a bit conceptual, lofting from a wire to a vertex\nbase_wire = cq.Workplane(\"XY\").line(0,20)\napex = cq.Workplane(\"XZ\").workplane(offset=20).center(0,30)\nresult = base_wire.loft(apex.val().Vertices()[0])"},
    {"prompt": "Create a plate and use a linear pattern to make a series of raised bosses.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(200,50,10)\nboss = cq.Workplane(\"XY\").workplane(offset=10).cylinder(10,8)\nbosses = cq.Workplane(\"XY\").rarray(40,1,5,1).eachpoint(lambda loc: boss.val().located(loc))\nresult = plate.union(bosses)"},
    {"prompt": "Cut a hex-shaped pocket into a cylinder.", "completion": "import cadquery as cq\ncyl = cq.Workplane(\"XY\").cylinder(50,30)\npocket = cq.Workplane(\"XY\").workplane(offset=50).polygon(6,15).extrude(-10)\nresult = cyl.cut(pocket)"},
    {"prompt": "Revolve a shape 180 degrees to create a half-donut shape.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XZ\").circle(10).translate((30,0,0))\nresult = profile.revolve(180, (0,0,0), (0,0,1))"},
    {"prompt": "Create a phone stand by extruding a profile and adding a cutout.", "completion": "import cadquery as cq\nprofile = cq.Workplane(\"XY\").moveTo(0,0).lineTo(0,100).lineTo(60,100).lineTo(80,0).close()\nstand = profile.extrude(10).rotate((0,1,0), (0,0,0), -15)\ncutout = cq.Workplane(\"XY\").box(10,60,15).translate((0,0,10))\nresult = stand.cut(cutout)"},
    {"prompt": "Fillet the intersection between two joined pipes.", "completion": "import cadquery as cq\npipe1 = cq.Workplane(\"XY\").cylinder(100,15)\npipe2 = cq.Workplane(\"XZ\").cylinder(100,15)\nresult = pipe1.union(pipe2).edges(fillet=5)"},
    {"prompt": "Create a hollow box with a lid by shelling two separate boxes.", "completion": "import cadquery as cq\nbox_base = cq.Workplane(\"XY\").box(100,60,40).faces(\">Z\").shell(-3)\nlid = cq.Workplane(\"XY\").box(100,60,10).faces(\"<Z\").shell(-3).translate((0,0,40))\nresult = box_base.union(lid)"},
    {"prompt": "Sweep a rectangular profile along a U-shaped path.", "completion": "import cadquery as cq\npath = cq.Workplane(\"XY\").moveTo(0,30).radiusArc((-30,0), -30).lineTo(0,-30)\nprofile = cq.Workplane(\"XZ\").rect(10,5)\nresult = profile.sweep(path)"},
    {"prompt": "Use a boolean intersection to create a lens shape from two spheres.", "completion": "import cadquery as cq\nsphere1 = cq.Sphere(100).translate((0,0,80))\nsphere2 = cq.Sphere(100).translate((0,0,-80))\nresult = sphere1.intersect(sphere2)"},
    {"prompt": "Mirror a hole pattern to the other side of a plate.", "completion": "import cadquery as cq\nplate = cq.Workplane(\"XY\").box(120,80,10)\nholes = plate.faces(\">Z\").workplane().center(40,20).rect(20,20).vertices().hole(5)\nmirrored_holes = holes.mirror(\"YZ\")\nresult = plate.cut(holes).cut(mirrored_holes)"},
    {"prompt": "Create a cube and chamfer only the four top edges.", "completion": "import cadquery as cq\ncube = cq.Workplane(\"XY\").box(40,40,40)\nresult = cube.faces(\">Z\").edges().chamfer(4)"},
    {"prompt": "Loft from a circle to an offset ellipse.", "completion": "import cadquery as cq\nbottom = cq.Workplane(\"XY\").circle(20)\ntop = cq.Workplane(\"XY\").workplane(offset=50).center(15,10).ellipse(25,15)\nresult = bottom.loft(top)"},
    {"prompt": "Extrude a gear tooth profile and then use a circular pattern.", "completion": "import cadquery as cq\n# Simplified tooth profile\ntooth = cq.Workplane(\"XY\").moveTo(40, -5).lineTo(50,-8).lineTo(50,8).lineTo(40,5).close()\nresult = cq.Workplane(\"XY\").polarArray(0,0,0,18).each(lambda: tooth.val()).extrude(10)"}
]