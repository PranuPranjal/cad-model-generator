[
  {
    "prompt": "Create a SpurGear with module 1.0, 20 teeth, and a width of 10.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.0, teeth_number=20, width=10.0)"
  },
  {
    "prompt": "Generate a SpurGear having 15 teeth, a module of 1.5, and a width of 12.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.5, teeth_number=15, width=12.0)"
  },
  {
    "prompt": "I need a SpurGear with the following specifications: module=2.0, teeth_number=30, width=15.0, and a bore diameter of 5.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.0, teeth_number=30, width=15.0, bore_d=5.0)"
  },
  {
    "prompt": "Can you make a SpurGear with 25 teeth, module 0.8, width 8.0, and pressure angle of 20 degrees?",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=0.8, teeth_number=25, width=8.0, pressure_angle=20.0)"
  },
  {
    "prompt": "Design a SpurGear with a module of 2.5, 40 teeth, a width of 20.0, and a hub diameter of 10.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.5, teeth_number=40, width=20.0, hub_d=10.0)"
  },
  {
    "prompt": "Create a SpurGear with 18 teeth, module 1.2, width 9.0, and a hub on both sides with a diameter of 8.0 and length of 3.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.2, teeth_number=18, width=9.0, hub_d=8.0, hub_length_a=3.0, hub_length_b=3.0)"
  },
  {
    "prompt": "Generate a SpurGear with a module of 3.0, 50 teeth, a width of 25.0, and a keyway of size (2.0, 1.0).",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=3.0, teeth_number=50, width=25.0, keyway=(2.0, 1.0))"
  },
  {
    "prompt": "I want a SpurGear with 22 teeth, module 1.8, width 14.0, and an addendum coefficient of 1.1.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.8, teeth_number=22, width=14.0, addendum_coeff=1.1)"
  },
  {
    "prompt": "Create a SpurGear with a dedendum coefficient of 1.3, 35 teeth, module 2.2, and width 18.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.2, teeth_number=35, width=18.0, dedendum_coeff=1.3)"
  },
  {
    "prompt": "Design a simple SpurGear with module 0.5, 12 teeth, and a width of 5.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=0.5, teeth_number=12, width=5.0, simple=True)"
  },
  {
    "prompt": "Generate a HelicalGear with module 1.0, 20 teeth, width 10.0, and a helix angle of 20 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.0, teeth_number=20, width=10.0, helix_angle=20.0)"
  },
  {
    "prompt": "Create a right-handed HelicalGear with 30 teeth, module 1.5, width 15.0, and a 25-degree helix angle.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.5, teeth_number=30, width=15.0, helix_angle=25.0, right_hand=True)"
  },
  {
    "prompt": "I need a left-handed HelicalGear with module 2.0, 40 teeth, width 20.0, and a helix angle of -30 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=40, width=20.0, helix_angle=-30.0, right_hand=False)"
  },
  {
    "prompt": "Generate a HelicalGear with 25 teeth, module 1.2, width 12.0, a helix angle of 15.0, and a bore diameter of 6.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.2, teeth_number=25, width=12.0, helix_angle=15.0, bore_d=6.0)"
  },
  {
    "prompt": "Design a HelicalGear with a pressure angle of 25 degrees, module 1.8, 35 teeth, width 18.0, and helix angle 22.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.8, teeth_number=35, width=18.0, pressure_angle=25.0, helix_angle=22.0)"
  },
  {
    "prompt": "Create a HelicalGear with a hub diameter of 12.0, module 2.5, 50 teeth, width 25.0, and helix angle of 18.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.5, teeth_number=50, width=25.0, helix_angle=18.0, hub_d=12.0)"
  },
  {
    "prompt": "Generate a HelicalGear with a keyway of size (3.0, 1.5), module 2.0, 45 teeth, width 22.0, and helix angle 20.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=45, width=22.0, helix_angle=20.0, keyway=(3.0, 1.5))"
  },
  {
    "prompt": "I want a simple HelicalGear with module 0.7, 18 teeth, width 7.0, and a helix angle of 10.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=0.7, teeth_number=18, width=7.0, helix_angle=10.0, simple=True)"
  },
  {
    "prompt": "Design a HelicalGear with an addendum coefficient of 1.05 and a dedendum coefficient of 1.2, having 28 teeth, module 1.5, width 14.0, and helix angle 12.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.5, teeth_number=28, width=14.0, helix_angle=12.0, addendum_coeff=1.05, dedendum_coeff=1.2)"
  },
  {
    "prompt": "Create a left-handed HelicalGear with a hub on one side of diameter 10.0 and length 4.0. It should have a module of 1.6, 32 teeth, a width of 16.0, and a helix angle of -18.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.6, teeth_number=32, width=16.0, helix_angle=-18.0, right_hand=False, hub_d=10.0, hub_length_a=4.0)"
  },
  {
    "prompt": "Generate a HerringboneGear with module 1.0, 20 teeth, width 20.0, and a helix angle of 20 degrees.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.0, teeth_number=20, width=20.0, helix_angle=20.0)"
  },
  {
    "prompt": "Create a HerringboneGear with 30 teeth, module 1.5, width 30.0, and a 25-degree helix angle.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.5, teeth_number=30, width=30.0, helix_angle=25.0)"
  },
  {
    "prompt": "I need a HerringboneGear with module 2.0, 40 teeth, width 40.0, a helix angle of 30 degrees, and a bore diameter of 10.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.0, teeth_number=40, width=40.0, helix_angle=30.0, bore_d=10.0)"
  },
  {
    "prompt": "Generate a HerringboneGear with 25 teeth, module 1.2, width 24.0, a helix angle of 15.0, and a central gap of 2.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.2, teeth_number=25, width=24.0, helix_angle=15.0, gap=2.0)"
  },
  {
    "prompt": "Design a HerringboneGear with a pressure angle of 22 degrees, module 1.8, 35 teeth, width 36.0, and helix angle 22.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.8, teeth_number=35, width=36.0, pressure_angle=22.0, helix_angle=22.0)"
  },
  {
    "prompt": "Create a HerringboneGear with a hub diameter of 15.0, module 2.5, 50 teeth, width 50.0, and helix angle of 18.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.5, teeth_number=50, width=50.0, helix_angle=18.0, hub_d=15.0)"
  },
  {
    "prompt": "Generate a HerringboneGear with a keyway of size (4.0, 2.0), module 2.0, 45 teeth, width 44.0, and helix angle 20.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.0, teeth_number=45, width=44.0, helix_angle=20.0, keyway=(4.0, 2.0))"
  },
  {
    "prompt": "I want a simple HerringboneGear with module 0.7, 18 teeth, width 14.0, and a helix angle of 10.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=0.7, teeth_number=18, width=14.0, helix_angle=10.0, simple=True)"
  },
  {
    "prompt": "Design a HerringboneGear with an addendum coefficient of 1.1 and a dedendum coefficient of 1.3, having 28 teeth, module 1.5, width 28.0, and helix angle 12.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.5, teeth_number=28, width=28.0, helix_angle=12.0, addendum_coeff=1.1, dedendum_coeff=1.3)"
  },
  {
    "prompt": "Create a HerringboneGear with a hub on both sides of diameter 12.0 and length 5.0. It should have a module of 1.6, 32 teeth, a width of 32.0, and a helix angle of 18.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.6, teeth_number=32, width=32.0, helix_angle=18.0, hub_d=12.0, hub_length_a=5.0, hub_length_b=5.0)"
  },
  {
    "prompt": "Generate a RingGear with module 1.0, 40 teeth, and a width of 10.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.0, teeth_number=40, width=10.0)"
  },
  {
    "prompt": "Create a RingGear having 50 teeth, a module of 1.5, and a width of 12.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.5, teeth_number=50, width=12.0)"
  },
  {
    "prompt": "I need a RingGear with the following specifications: module=2.0, teeth_number=60, width=15.0, and an outer diameter of 125.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.0, teeth_number=60, width=15.0, outer_d=125.0)"
  },
  {
    "prompt": "Can you make a RingGear with 45 teeth, module 1.2, width 10.0, and pressure angle of 20 degrees?",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.2, teeth_number=45, width=10.0, pressure_angle=20.0)"
  },
  {
    "prompt": "Design a RingGear with a module of 2.5, 80 teeth, a width of 20.0, and a hub diameter of 210.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.5, teeth_number=80, width=20.0, hub_d=210.0)"
  },
  {
    "prompt": "Create a RingGear with 55 teeth, module 1.8, width 14.0, and a hub on one side with a diameter of 105.0 and length of 5.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.8, teeth_number=55, width=14.0, hub_d=105.0, hub_length_a=5.0)"
  },
  {
    "prompt": "Generate a helical RingGear with module 1.0, 40 teeth, width 10.0, and a helix angle of 15 degrees.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.0, teeth_number=40, width=10.0, helix_angle=15.0)"
  },
  {
    "prompt": "I want a RingGear with 65 teeth, module 2.2, width 18.0, and an addendum coefficient of 1.15.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.2, teeth_number=65, width=18.0, addendum_coeff=1.15)"
  },
  {
    "prompt": "Create a RingGear with a dedendum coefficient of 1.35, 70 teeth, module 2.0, and width 16.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.0, teeth_number=70, width=16.0, dedendum_coeff=1.35)"
  },
  {
    "prompt": "Design a simple RingGear with module 0.8, 30 teeth, and a width of 8.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=0.8, teeth_number=30, width=8.0, simple=True)"
  },
  {
    "prompt": "Generate a BevelGear with module 1.0, 20 teeth, and a pitch angle of 45 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.0, teeth_number=20, pitch_angle=45.0)"
  },
  {
    "prompt": "Create a BevelGear having 25 teeth, a module of 1.5, and a pitch angle of 30 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.5, teeth_number=25, pitch_angle=30.0)"
  },
  {
    "prompt": "I need a BevelGear with the following specifications: module=2.0, teeth_number=30, pitch_angle=60.0, and a bore diameter of 8.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.0, teeth_number=30, pitch_angle=60.0, bore_d=8.0)"
  },
  {
    "prompt": "Can you make a BevelGear with 18 teeth, module 1.2, pitch angle 50.0, and pressure angle of 20 degrees?",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.2, teeth_number=18, pitch_angle=50.0, pressure_angle=20.0)"
  },
  {
    "prompt": "Design a BevelGear with a module of 2.5, 35 teeth, a pitch angle of 40.0, and a face width of 10.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.5, teeth_number=35, pitch_angle=40.0, face_width=10.0)"
  },
  {
    "prompt": "Create a BevelGear with a root angle offset of 5.0 degrees, 22 teeth, module 1.8, and pitch angle 55.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.8, teeth_number=22, pitch_angle=55.0, root_angle_offset=5.0)"
  },
  {
    "prompt": "Generate a BevelGear with a face angle offset of -2.0 degrees, module 2.2, 28 teeth, and pitch angle 35.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.2, teeth_number=28, pitch_angle=35.0, face_angle_offset=-2.0)"
  },
  {
    "prompt": "I want a BevelGear with a keyway of size (2.5, 1.2), 26 teeth, module 2.0, and pitch angle 48.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.0, teeth_number=26, pitch_angle=48.0, keyway=(2.5, 1.2))"
  },
  {
    "prompt": "Create a helical BevelGear with module 1.0, 20 teeth, pitch angle 45 degrees, and a helix angle of 15 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.0, teeth_number=20, pitch_angle=45.0, helix_angle=15.0)"
  },
  {
    "prompt": "Design a simple BevelGear with module 0.9, 15 teeth, and a pitch angle of 40.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=0.9, teeth_number=15, pitch_angle=40.0, simple=True)"
  },
  {
    "prompt": "Generate a RackGear with module 1.0, a length of 100.0, and a width of 10.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.0, length=100.0, width=10.0)"
  },
  {
    "prompt": "Create a RackGear of length 120.0, width 12.0, and a module of 1.5.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.5, length=120.0, width=12.0)"
  },
  {
    "prompt": "I need a RackGear with the following specifications: module=2.0, length=150.0, width=15.0, and a height of 10.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.0, length=150.0, width=15.0, height=10.0)"
  },
  {
    "prompt": "Can you make a RackGear of length 80.0, width 8.0, module 0.8, and a pressure angle of 20 degrees?",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=0.8, length=80.0, width=8.0, pressure_angle=20.0)"
  },
  {
    "prompt": "Design a helical RackGear with a module of 1.2, length 110.0, width 10.0, and a helix angle of 10 degrees.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.2, length=110.0, width=10.0, helix_angle=10.0)"
  },
  {
    "prompt": "Create a right-handed helical RackGear of length 130.0, width 14.0, module 1.8, and a helix angle of 18.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.8, length=130.0, width=14.0, helix_angle=18.0, right_hand=True)"
  },
  {
    "prompt": "Generate a left-handed helical RackGear with module 2.5, length 200.0, width 20.0, and a helix angle of -25.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.5, length=200.0, width=20.0, helix_angle=-25.0, right_hand=False)"
  },
  {
    "prompt": "I want a RackGear with an addendum coefficient of 1.1, module 1.6, length 140.0, and width 16.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.6, length=140.0, width=16.0, addendum_coeff=1.1)"
  },
  {
    "prompt": "Create a RackGear with a dedendum coefficient of 1.3, module 2.2, length 180.0, and width 18.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.2, length=180.0, width=18.0, dedendum_coeff=1.3)"
  },
  {
    "prompt": "Design a simple RackGear with module 0.5, length 50.0, and a width of 5.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=0.5, length=50.0, width=5.0, simple=True)"
  },
  {
    "prompt": "Create a SpurGear with a high tooth count of 100, module 0.5, and width 8.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=0.5, teeth_number=100, width=8.0)"
  },
  {
    "prompt": "Generate a SpurGear with a fractional module of 1.25 and 32 teeth and a width of 10.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.25, teeth_number=32, width=10.0)"
  },
  {
    "prompt": "I need a SpurGear with a very small module of 0.3, 10 teeth, and a width of 4.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=0.3, teeth_number=10, width=4.0)"
  },
  {
    "prompt": "Can you make a SpurGear with an unusual pressure angle of 14.5 degrees, 48 teeth, module 2.0, and width 20.0?",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.0, teeth_number=48, width=20.0, pressure_angle=14.5)"
  },
  {
    "prompt": "Design a SpurGear with a large bore of 20.0mm, 60 teeth, module 3.0, and width 30.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=3.0, teeth_number=60, width=30.0, bore_d=20.0)"
  },
  {
    "prompt": "Create a SpurGear with a prominent hub of 25.0mm diameter and 10.0mm length on one side, with 45 teeth, module 2.5, and width 25.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.5, teeth_number=45, width=25.0, hub_d=25.0, hub_length_a=10.0)"
  },
  {
    "prompt": "Generate a SpurGear with a rectangular keyway of 5.0mm by 3.0mm, 55 teeth, module 2.8, and width 28.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.8, teeth_number=55, width=28.0, keyway=(5.0, 3.0))"
  },
  {
    "prompt": "I want a SpurGear with a custom addendum (1.2) and dedendum (1.4) coefficient, 28 teeth, module 1.5, and width 15.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.5, teeth_number=28, width=15.0, addendum_coeff=1.2, dedendum_coeff=1.4)"
  },
  {
    "prompt": "Design a simplified SpurGear for visualization purposes with 16 teeth, module 1.0, and width 6.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.0, teeth_number=16, width=6.0, simple=True)"
  },
  {
    "prompt": "Create a wide SpurGear with a width of 50.0mm, 80 teeth, and a module of 4.0.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=4.0, teeth_number=80, width=50.0)"
  },
  {
    "prompt": "Generate a HelicalGear with a shallow helix angle of 5 degrees, 22 teeth, module 1.0, and width 10.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.0, teeth_number=22, width=10.0, helix_angle=5.0)"
  },
  {
    "prompt": "Create a left-handed HelicalGear with a steep helix angle of -40 degrees, 50 teeth, module 2.0, and width 30.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=50, width=30.0, helix_angle=-40.0, right_hand=False)"
  },
  {
    "prompt": "I need a HelicalGear with a keyway and a hub. Keyway size is (4.0, 2.5), hub diameter is 18.0mm. The gear has 38 teeth, module 1.8, width 20.0, and a helix angle of 28.0 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.8, teeth_number=38, width=20.0, helix_angle=28.0, hub_d=18.0, keyway=(4.0, 2.5))"
  },
  {
    "prompt": "Design a HelicalGear with a non-standard pressure angle of 18.0 degrees, 33 teeth, module 1.6, width 18.0, and helix angle 22.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.6, teeth_number=33, width=18.0, pressure_angle=18.0, helix_angle=22.0)"
  },
  {
    "prompt": "Generate a simple right-handed HelicalGear with 15 teeth, module 0.9, width 9.0, and helix angle 12.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=0.9, teeth_number=15, width=9.0, helix_angle=12.0, right_hand=True, simple=True)"
  },
  {
    "prompt": "Create a HelicalGear with a custom tooth profile using addendum coefficient 1.15 and dedendum coefficient 1.35. It should have 26 teeth, module 1.4, width 16.0, and helix angle 16.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.4, teeth_number=26, width=16.0, helix_angle=16.0, addendum_coeff=1.15, dedendum_coeff=1.35)"
  },
  {
    "prompt": "I want a HelicalGear with a hub on both sides. Hub diameter is 20.0mm, and each hub length is 8.0mm. The gear has 42 teeth, module 2.2, width 25.0, and helix angle 19.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.2, teeth_number=42, width=25.0, helix_angle=19.0, hub_d=20.0, hub_length_a=8.0, hub_length_b=8.0)"
  },
  {
    "prompt": "Design a narrow HelicalGear with a width of 5.0mm, 18 teeth, module 0.8, and a helix angle of 8.0 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=0.8, teeth_number=18, width=5.0, helix_angle=8.0)"
  },
  {
    "prompt": "Generate a large HelicalGear with 120 teeth, module 5.0, width 60.0, and a helix angle of 30.0.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=5.0, teeth_number=120, width=60.0, helix_angle=30.0)"
  },
  {
    "prompt": "Create a HerringboneGear with a small gap of 1.0mm, 24 teeth, module 1.0, width 22.0, and a helix angle of 18.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.0, teeth_number=24, width=22.0, helix_angle=18.0, gap=1.0)"
  },
  {
    "prompt": "Generate a HerringboneGear with no gap, 36 teeth, module 1.5, width 30.0, and a helix angle of 25.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.5, teeth_number=36, width=30.0, helix_angle=25.0, gap=0.0)"
  },
  {
    "prompt": "I need a HerringboneGear with a large central gap of 5.0mm, 48 teeth, module 2.0, width 50.0, and a helix angle of 30.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.0, teeth_number=48, width=50.0, helix_angle=30.0, gap=5.0)"
  },
  {
    "prompt": "Design a HerringboneGear with a bore and a hub. Bore diameter is 15.0mm, hub diameter is 25.0mm. The gear has 40 teeth, module 1.8, width 40.0, and a helix angle of 22.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.8, teeth_number=40, width=40.0, helix_angle=22.0, bore_d=15.0, hub_d=25.0)"
  },
  {
    "prompt": "Create a simple HerringboneGear with 20 teeth, module 1.2, width 24.0, and helix angle 15.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.2, teeth_number=20, width=24.0, helix_angle=15.0, simple=True)"
  },
  {
    "prompt": "Generate a HerringboneGear with a keyway and hubs on both sides. Keyway size is (5.0, 3.0), hub diameter is 30.0mm, and each hub length is 10.0mm. The gear has 55 teeth, module 2.5, width 55.0, and helix angle of 20.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.5, teeth_number=55, width=55.0, helix_angle=20.0, keyway=(5.0, 3.0), hub_d=30.0, hub_length_a=10.0, hub_length_b=10.0)"
  },
  {
    "prompt": "I want a HerringboneGear with a custom tooth profile: addendum 1.1, dedendum 1.3. It should have 32 teeth, module 1.6, width 32.0, and a helix angle of 16.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.6, teeth_number=32, width=32.0, helix_angle=16.0, addendum_coeff=1.1, dedendum_coeff=1.3)"
  },
  {
    "prompt": "Design a wide HerringboneGear with a width of 80.0mm, 100 teeth, module 4.0, and a helix angle of 35.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=4.0, teeth_number=100, width=80.0, helix_angle=35.0)"
  },
  {
    "prompt": "Create a HerringboneGear with a non-standard pressure angle of 22.5 degrees, 28 teeth, module 1.5, width 30.0, and helix angle 18.0.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.5, teeth_number=28, width=30.0, pressure_angle=22.5, helix_angle=18.0)"
  },
  {
    "prompt": "Generate a RingGear with a large number of teeth (120), module 1.0, and a width of 15.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.0, teeth_number=120, width=15.0)"
  },
  {
    "prompt": "Create a RingGear with a very large outer diameter of 300.0mm, 100 teeth, and a module of 2.5.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.5, teeth_number=100, width=20.0, outer_d=300.0)"
  },
  {
    "prompt": "I need a helical RingGear with a left-handed helix of -20 degrees, 80 teeth, module 2.0, and width 25.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.0, teeth_number=80, width=25.0, helix_angle=-20.0)"
  },
  {
    "prompt": "Design a RingGear with a prominent hub on one side. Hub diameter is 250.0mm, hub length is 15.0mm. The gear has 90 teeth, module 2.2, and width 22.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=2.2, teeth_number=90, width=22.0, hub_d=250.0, hub_length_a=15.0)"
  },
  {
    "prompt": "Generate a simple RingGear for a planetary system with 36 teeth, module 1.2, and width 12.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.2, teeth_number=36, width=12.0, simple=True)"
  },
  {
    "prompt": "Create a RingGear with a custom tooth profile: addendum 1.05, dedendum 1.25. It should have 75 teeth, module 1.8, and width 18.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.8, teeth_number=75, width=18.0, addendum_coeff=1.05, dedendum_coeff=1.25)"
  },
  {
    "prompt": "I want a RingGear with a non-standard pressure angle of 18 degrees, 68 teeth, module 1.6, and width 16.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=1.6, teeth_number=68, width=16.0, pressure_angle=18.0)"
  },
  {
    "prompt": "Design a wide RingGear with a width of 40.0mm, 150 teeth, and a module of 3.0.",
    "completion": "from cq_gears import RingGear\nresult = RingGear(module=3.0, teeth_number=150, width=40.0)"
  },
  {
    "prompt": "Generate a BevelGear with a small number of teeth (12), module 1.0, and a pitch angle of 30 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.0, teeth_number=12, pitch_angle=30.0)"
  },
  {
    "prompt": "Create a BevelGear with a large number of teeth (60), module 2.0, and a pitch angle of 60 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.0, teeth_number=60, pitch_angle=60.0)"
  },
  {
    "prompt": "I need a helical BevelGear with a right-handed helix of 20 degrees, 30 teeth, module 1.5, and a pitch angle of 45 degrees.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.5, teeth_number=30, pitch_angle=45.0, helix_angle=20.0)"
  },
  {
    "prompt": "Design a BevelGear with a keyway and a bore. Keyway size is (3.0, 1.8), bore diameter is 10.0mm. The gear has 24 teeth, module 1.8, and a pitch angle of 50.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.8, teeth_number=24, pitch_angle=50.0, bore_d=10.0, keyway=(3.0, 1.8))"
  },
  {
    "prompt": "Generate a simple BevelGear with 16 teeth, module 1.2, and a pitch angle of 40.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.2, teeth_number=16, pitch_angle=40.0, simple=True)"
  },
  {
    "prompt": "Create a BevelGear with a custom face width of 12.0mm, 28 teeth, module 2.2, and a pitch angle of 35.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.2, teeth_number=28, pitch_angle=35.0, face_width=12.0)"
  },
  {
    "prompt": "I want a BevelGear with a non-standard pressure angle of 16.0 degrees, 20 teeth, module 1.4, and pitch angle 55.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=1.4, teeth_number=20, pitch_angle=55.0, pressure_angle=16.0)"
  },
  {
    "prompt": "Design a BevelGear with specified root and face angle offsets of 3.0 and -1.0 degrees respectively. The gear has 25 teeth, module 2.0, and a pitch angle of 48.0.",
    "completion": "from cq_gears import BevelGear\nresult = BevelGear(module=2.0, teeth_number=25, pitch_angle=48.0, root_angle_offset=3.0, face_angle_offset=-1.0)"
  },
  {
    "prompt": "Generate a short RackGear with a length of 50.0mm, module 1.0, and width 8.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.0, length=50.0, width=8.0)"
  },
  {
    "prompt": "Create a very long RackGear with a length of 500.0mm, module 2.0, and width 20.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.0, length=500.0, width=20.0)"
  },
  {
    "prompt": "I need a helical RackGear with a steep helix angle of 30 degrees, module 1.5, length 200.0, and width 15.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.5, length=200.0, width=15.0, helix_angle=30.0)"
  },
  {
    "prompt": "Design a RackGear with a custom height of 12.0mm, module 1.8, length 160.0, and width 18.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.8, length=160.0, width=18.0, height=12.0)"
  },
  {
    "prompt": "Generate a simple left-handed helical RackGear with a helix angle of -15 degrees, module 1.2, length 120.0, and width 12.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.2, length=120.0, width=12.0, helix_angle=-15.0, right_hand=False, simple=True)"
  },
  {
    "prompt": "Create a RackGear with a non-standard pressure angle of 15.0 degrees, module 2.2, length 220.0, and width 22.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.2, length=220.0, width=22.0, pressure_angle=15.0)"
  },
  {
    "prompt": "I want a RackGear with custom addendum (1.1) and dedendum (1.3) coefficients, module 1.4, length 140.0, and width 14.0.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=1.4, length=140.0, width=14.0, addendum_coeff=1.1, dedendum_coeff=1.3)"
  },
  {
    "prompt": "Design a wide RackGear with a width of 30.0mm, module 2.5, and a length of 250.0mm.",
    "completion": "from cq_gears import RackGear\nresult = RackGear(module=2.5, length=250.0, width=30.0)"
  },
  {
    "prompt": "Create a SpurGear for a high-torque transmission with module 3.0, 60 teeth, a wide face of 40.0mm, a 15mm bore for the shaft, a 30mm hub, and a 5x3mm keyway.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=3.0, teeth_number=60, width=40.0, bore_d=15.0, hub_d=30.0, keyway=(5.0, 3.0))"
  },
  {
    "prompt": "I need a small plastic SpurGear with a 0.5 module, 8 teeth, a width of 5mm, and a simple profile for 3D printing.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=0.5, teeth_number=8, width=5.0, simple=True)"
  },
  {
    "prompt": "Generate a SpurGear with an asymmetric hub. The gear has 35 teeth, a 2.0 module, 20mm width. The hub is 40mm in diameter, 10mm long on one side and 5mm on the other. It also needs a 12mm central hole.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.0, teeth_number=35, width=20.0, hub_d=40.0, bore_d=12.0, hub_length_a=10.0, hub_length_b=5.0)"
  },
  {
    "prompt": "Can you make a SpurGear with a non-standard 14.5 degree pressure angle? It should have 48 teeth, a module of 2.5, and a width of 25mm.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.5, teeth_number=48, width=25.0, pressure_angle=14.5)"
  },
  {
    "prompt": "Design a large SpurGear with 150 teeth, module 4.0, width 50mm, and a bore of 30mm.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=4.0, teeth_number=150, width=50.0, bore_d=30.0)"
  },
  {
    "prompt": "I want a SpurGear with a modified tooth profile. Use an addendum coefficient of 1.2 and a dedendum of 1.4. The gear has 24 teeth, a 1.5 module, and is 15mm wide.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.5, teeth_number=24, width=15.0, addendum_coeff=1.2, dedendum_coeff=1.4)"
  },
  {
    "prompt": "Make me a SpurGear with 28 teeth, module 2, width 18mm, but with no central body, just the teeth.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=2.0, teeth_number=28, width=18.0, simple=True)"
  },
  {
    "prompt": "Give me a SpurGear where the hub is the same size as the root diameter. Module 1.0, 30 teeth, width 12mm, bore 8mm.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.0, teeth_number=30, width=12.0, bore_d=8.0, hub_d=28.0)"
  },
  {
    "prompt": "Create a detailed SpurGear with 42 teeth, module 1.75, width 20mm, a 10mm bore, a 25mm hub, and a 4x2.5mm keyway.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.75, teeth_number=42, width=20.0, bore_d=10.0, hub_d=25.0, keyway=(4.0, 2.5))"
  },
  {
    "prompt": "A simple SpurGear please: 18 teeth, 1.25 module, 10mm width.",
    "completion": "from cq_gears import SpurGear\nresult = SpurGear(module=1.25, teeth_number=18, width=10.0)"
  },
  {
    "prompt": "Generate a left-handed HelicalGear with a steep 40-degree helix angle. It has 45 teeth, a 2.0 module, and is 35mm wide.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=45, width=35.0, helix_angle=-40.0, right_hand=False)"
  },
  {
    "prompt": "I need a right-handed HelicalGear for a high-speed application. Use a 15-degree helix angle, 32 teeth, 1.5 module, 25mm width, a 10mm shaft opening with a 3x2mm keyway, and a 20mm hub.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.5, teeth_number=32, width=25.0, helix_angle=15.0, right_hand=True, bore_d=10.0, hub_d=20.0, keyway=(3.0, 2.0))"
  },
  {
    "prompt": "Create a HelicalGear with a very shallow 5-degree helix. Give it 25 teeth, module 1.0, width 15mm, and render it as a simple object.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.0, teeth_number=25, width=15.0, helix_angle=5.0, simple=True)"
  },
  {
    "prompt": "Design a HelicalGear with an asymmetric hub. 38 teeth, module 1.75, width 22mm, helix 20 deg. The hub is 30mm diameter, 8mm long on side A and 12mm on side B. Bore is 14mm.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.75, teeth_number=38, width=22.0, helix_angle=20.0, bore_d=14.0, hub_d=30.0, hub_length_a=8.0, hub_length_b=12.0)"
  },
  {
    "prompt": "Make a left-handed HelicalGear. Explicitly set right_hand to False. Module 2.5, 50 teeth, width 40mm, helix angle 30 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.5, teeth_number=50, width=40.0, helix_angle=30.0, right_hand=False)"
  },
  {
    "prompt": "Generate a HelicalGear with a custom pressure angle of 22.5 degrees. 28 teeth, 1.25 module, 18mm width, 18-degree helix.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.25, teeth_number=28, width=18.0, pressure_angle=22.5, helix_angle=18.0)"
  },
  {
    "prompt": "I need a compact HelicalGear. Module 0.8, 12 teeth, width 8mm, helix 25 deg, 4mm bore.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=0.8, teeth_number=12, width=8.0, helix_angle=25.0, bore_d=4.0)"
  },
  {
    "prompt": "Can you create a HelicalGear with modified addendum of 1.1 and dedendum of 1.3? Use 36 teeth, module 2.0, width 28mm, and a helix of 22 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=2.0, teeth_number=36, width=28.0, helix_angle=22.0, addendum_coeff=1.1, dedendum_coeff=1.3)"
  },
  {
    "prompt": "A simple right-handed HelicalGear for a prototype. 20 teeth, module 1.0, width 12mm, helix 10 degrees.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=1.0, teeth_number=20, width=12.0, helix_angle=10.0, right_hand=True, simple=True)"
  },
  {
    "prompt": "Design a robust HelicalGear: 60 teeth, module 3.0, width 45mm, helix 25 deg, 20mm bore, 40mm hub, 6x4mm keyway.",
    "completion": "from cq_gears import HelicalGear\nresult = HelicalGear(module=3.0, teeth_number=60, width=45.0, helix_angle=25.0, bore_d=20.0, hub_d=40.0, keyway=(6.0, 4.0))"
  },
  {
    "prompt": "A HerringboneGear with zero gap. 30 teeth, module 2.0, width 40mm, and a helix angle of 30 degrees.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.0, teeth_number=30, width=40.0, helix_angle=30.0, gap=0.0)"
  },
  {
    "prompt": "I need a HerringboneGear with a wide 8mm central gap for a tool to pass through. It should have 50 teeth, a 2.5 module, 60mm total width, and a 25-degree helix.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=2.5, teeth_number=50, width=60.0, helix_angle=25.0, gap=8.0)"
  },
  {
    "prompt": "Generate a complete HerringboneGear model with a 12mm bore, a 28mm hub, and a 4x2.5mm keyway. Use 36 teeth, 1.75 module, 45mm width, 20-degree helix, and a standard 2mm gap.",
    "completion": "from cq_gears import HerringboneGear\nresult = HerringboneGear(module=1.75, teeth_number=36, width=45.0, helix_angle=20.0, bore_d=12.0, hub_d=28.0, keyway=(4.0, 2.5), gap=2.0)"
  }
]
